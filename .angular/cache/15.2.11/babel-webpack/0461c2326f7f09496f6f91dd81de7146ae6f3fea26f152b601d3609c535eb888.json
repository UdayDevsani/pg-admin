{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"../../services/notification.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Please enter your username. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Please enter your password! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, notificationService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.notificationService = notificationService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      remember: [false]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      if (this.authService.login(username, password)) {\n        this.notificationService.success('Login successful');\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.notificationService.error('Invalid username or password');\n      }\n    } else {\n      this.showFieldErrors();\n    }\n  }\n  showFieldErrors() {\n    Object.keys(this.loginForm.controls).forEach(field => {\n      const control = this.loginForm.get(field);\n      if (control && control.invalid && (control.dirty || control.touched)) {\n        this.notificationService.error(`Invalid ${field}`);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 48,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"section\", \"register\", \"min-vh-100\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\", \"py-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-4\", \"col-md-6\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [1, \"d-flex\", \"justify-content-center\", \"py-4\"], [\"href\", \"index.html\", 1, \"logo\", \"d-flex\", \"align-items-center\", \"w-auto\"], [\"src\", \"assets/img/logo.png\", \"alt\", \"\"], [1, \"d-none\", \"d-lg-block\"], [1, \"card\", \"mb-3\"], [1, \"card-body\"], [1, \"pt-4\", \"pb-2\"], [1, \"card-title\", \"text-center\", \"pb-0\", \"fs-4\"], [1, \"text-center\", \"small\"], [\"novalidate\", \"\", 1, \"row\", \"g-3\", \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-12\"], [\"for\", \"yourUsername\", 1, \"form-label\"], [1, \"input-group\", \"has-validation\"], [\"id\", \"inputGroupPrepend\", 1, \"input-group-text\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"yourUsername\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"yourPassword\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"yourPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"remember\", \"id\", \"rememberMe\", 1, \"form-check-input\"], [\"for\", \"rememberMe\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"small\", \"mb-0\"], [\"routerLink\", \"/signup\"], [1, \"credits\"], [\"href\", \"https://bootstrapmade.com/\"], [1, \"invalid-feedback\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 0)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"a\", 5);\n        i0.ɵɵelement(7, \"img\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9, \"PG Admin\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"h5\", 11);\n        i0.ɵɵtext(14, \"Login to Your Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 12);\n        i0.ɵɵtext(16, \"Enter your username & password to login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"form\", 13);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_17_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(18, \"div\", 14)(19, \"label\", 15);\n        i0.ɵɵtext(20, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 16)(22, \"span\", 17);\n        i0.ɵɵtext(23, \"@\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 18);\n        i0.ɵɵtemplate(25, LoginComponent_div_25_Template, 2, 0, \"div\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 14)(27, \"label\", 20);\n        i0.ɵɵtext(28, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 21);\n        i0.ɵɵtemplate(30, LoginComponent_div_30_Template, 2, 0, \"div\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 14)(32, \"div\", 22);\n        i0.ɵɵelement(33, \"input\", 23);\n        i0.ɵɵelementStart(34, \"label\", 24);\n        i0.ɵɵtext(35, \"Remember me\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"div\", 14)(37, \"button\", 25);\n        i0.ɵɵtext(38, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 14)(40, \"p\", 26);\n        i0.ɵɵtext(41, \"Don't have account? \");\n        i0.ɵɵelementStart(42, \"a\", 27);\n        i0.ɵɵtext(43, \"Create an account\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(44, \"div\", 28);\n        i0.ɵɵtext(45, \" Designed by \");\n        i0.ɵɵelementStart(46, \"a\", 29);\n        i0.ɵɵtext(47, \"BootstrapMade\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      }\n    },\n    dependencies: [i5.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","fb","authService","notificationService","router","ngOnInit","loginForm","group","username","required","password","remember","onSubmit","valid","value","login","success","navigate","error","showFieldErrors","Object","keys","controls","forEach","field","control","get","invalid","dirty","touched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\auth\\login\\login.component.ts","D:\\github\\pg-admin\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private notificationService: NotificationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n    username: ['', [Validators.required]],\n    password: ['', [Validators.required]],\n    remember: [false]\n  });}\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value;\n      if (this.authService.login(username, password)) {\n        this.notificationService.success('Login successful');\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.notificationService.error('Invalid username or password');\n      }\n    } else {\n      this.showFieldErrors();\n    }\n  }\n\n  showFieldErrors(): void {\n    Object.keys(this.loginForm.controls).forEach(field => {\n      const control = this.loginForm.get(field);\n      if (control && control.invalid && (control.dirty || control.touched)) {\n        this.notificationService.error(`Invalid ${field}`);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <section class=\"section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4\">\n    <div class=\"container\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center\">\n          <div class=\"d-flex justify-content-center py-4\">\n            <a href=\"index.html\" class=\"logo d-flex align-items-center w-auto\">\n              <img src=\"assets/img/logo.png\" alt=\"\">\n              <span class=\"d-none d-lg-block\">PG Admin</span>\n            </a>\n          </div>\n          <div class=\"card mb-3\">\n            <div class=\"card-body\">\n              <div class=\"pt-4 pb-2\">\n                <h5 class=\"card-title text-center pb-0 fs-4\">Login to Your Account</h5>\n                <p class=\"text-center small\">Enter your username & password to login</p>\n              </div>\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"row g-3 needs-validation\" novalidate>\n                <div class=\"col-12\">\n                  <label for=\"yourUsername\" class=\"form-label\">Username</label>\n                  <div class=\"input-group has-validation\">\n                    <span class=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"yourUsername\" required>\n                    <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\">\n                      Please enter your username.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label for=\"yourPassword\" class=\"form-label\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"yourPassword\" required>\n                  <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n                    Please enter your password!\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"remember\" id=\"rememberMe\">\n                    <label class=\"form-check-label\" for=\"rememberMe\">Remember me</label>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <button class=\"btn btn-primary w-100\" type=\"submit\">Login</button>\n                </div>\n                <div class=\"col-12\">\n                  <p class=\"small mb-0\">Don't have account? <a routerLink=\"/signup\">Create an account</a></p>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div class=\"credits\">\n            Designed by <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}