{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard/dashboard.service\";\nexport class DashboardComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n  }\n  ngOnInit() {\n    this.fetchDashboardData();\n    this.initializeCharts();\n  }\n  fetchDashboardData() {\n    this.dashboardService.getDashboardData().subscribe(data => {\n      this.totalUsers = data.totalUsers;\n      this.totalRooms = data.totalRooms;\n      this.totalBookings = data.totalBookings;\n      this.totalPayments = data.totalPayments;\n    });\n  }\n  initializeCharts() {\n    this.lineChartOptions = {\n      title: {\n        text: 'Room Occupancy'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Occupancy',\n        type: 'line',\n        data: [120, 200, 150, 80, 70, 110, 130]\n      }]\n    };\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"dashboard\"], [1, \"metrics\"], [1, \"metric-card\"], [\"id\", \"line-chart\", 2, \"height\", \"350px\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Total Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"h3\");\n        i0.ɵɵtext(9, \"Total Rooms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"h3\");\n        i0.ɵɵtext(14, \"Total Bookings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"h3\");\n        i0.ɵɵtext(19, \"Total Payments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.totalUsers);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.totalRooms);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.totalBookings);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.totalPayments);\n      }\n    },\n    styles: [\".pagetitle[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.breadcrumb[_ngcontent-%COMP%] {\\r\\n  background: none;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.card-icon[_ngcontent-%COMP%] {\\r\\n  font-size: 1.5rem;\\r\\n  color: #4caf50;\\r\\n}\\r\\n\\r\\n.info-card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%] {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.info-card[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.d-flex[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.ps-3[_ngcontent-%COMP%] {\\r\\n  padding-left: 1rem !important;\\r\\n}\\r\\n\\r\\n.text-success[_ngcontent-%COMP%] {\\r\\n  color: #4caf50 !important;\\r\\n}\\r\\n\\r\\n.text-danger[_ngcontent-%COMP%] {\\r\\n  color: #f44336 !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdldGl0bGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5icmVhZGNydW1iIHtcclxuICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZC1pY29uIHtcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBjb2xvcjogIzRjYWY1MDtcclxufVxyXG5cclxuLmluZm8tY2FyZCAuY2FyZC1ib2R5IHtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4uaW5mby1jYXJkIGg1IHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uZC1mbGV4IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5wcy0zIHtcclxuICBwYWRkaW5nLWxlZnQ6IDFyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxuLnRleHQtc3VjY2VzcyB7XHJcbiAgY29sb3I6ICM0Y2FmNTAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnRleHQtZGFuZ2VyIHtcclxuICBjb2xvcjogI2Y0NDMzNiAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAO7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;EAAsB;EAE1DC,QAAQ;IACN,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAD,kBAAkB;IAChB,IAAI,CAACF,gBAAgB,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACxD,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACC,UAAU;MACjC,IAAI,CAACC,UAAU,GAAGF,IAAI,CAACE,UAAU;MACjC,IAAI,CAACC,aAAa,GAAGH,IAAI,CAACG,aAAa;MACvC,IAAI,CAACC,aAAa,GAAGJ,IAAI,CAACI,aAAa;IACzC,CAAC,CAAC;EACJ;EAEAP,gBAAgB;IACd,IAAI,CAACQ,gBAAgB,GAAG;MACtBC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE;OACV;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE,UAAU;QAChBX,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;OACvD;MACDY,KAAK,EAAE;QACLD,IAAI,EAAE;OACP;MACDE,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,WAAW;QACjBH,IAAI,EAAE,MAAM;QACZX,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;OACvC;KAEJ;EACH;EAAC;qBA9CUR,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAuB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT/BC,8BAAuB;QAGbA,2BAAW;QAAAA,iBAAK;QACpBA,yBAAG;QAAAA,YAAgB;QAAAA,iBAAI;QAEzBA,8BAAyB;QACnBA,2BAAW;QAAAA,iBAAK;QACpBA,0BAAG;QAAAA,aAAgB;QAAAA,iBAAI;QAEzBA,+BAAyB;QACnBA,+BAAc;QAAAA,iBAAK;QACvBA,0BAAG;QAAAA,aAAmB;QAAAA,iBAAI;QAE5BA,+BAAyB;QACnBA,+BAAc;QAAAA,iBAAK;QACvBA,0BAAG;QAAAA,aAAmB;QAAAA,iBAAI;QAG9BA,0BAAkD;QACpDA,iBAAM;;;QAhBGA,eAAgB;QAAhBA,oCAAgB;QAIhBA,eAAgB;QAAhBA,oCAAgB;QAIhBA,eAAmB;QAAnBA,uCAAmB;QAInBA,eAAmB;QAAnBA,uCAAmB","names":["DashboardComponent","constructor","dashboardService","ngOnInit","fetchDashboardData","initializeCharts","getDashboardData","subscribe","data","totalUsers","totalRooms","totalBookings","totalPayments","lineChartOptions","title","text","tooltip","trigger","xAxis","type","yAxis","series","name","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\dashboard\\dashboard.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../services/dashboard/dashboard.service';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  totalUsers!: number;\n  totalRooms!: number;\n  totalBookings!: number;\n  totalPayments!: number;\n  lineChartOptions!: EChartsOption;\n\n  constructor(private dashboardService: DashboardService) { }\n\n  ngOnInit(): void {\n    this.fetchDashboardData();\n    this.initializeCharts();\n  }\n\n  fetchDashboardData(): void {\n    this.dashboardService.getDashboardData().subscribe(data => {\n      this.totalUsers = data.totalUsers;\n      this.totalRooms = data.totalRooms;\n      this.totalBookings = data.totalBookings;\n      this.totalPayments = data.totalPayments;\n    });\n  }\n\n  initializeCharts(): void {\n    this.lineChartOptions = {\n      title: {\n        text: 'Room Occupancy'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: 'Occupancy',\n          type: 'line',\n          data: [120, 200, 150, 80, 70, 110, 130]\n        }\n      ]\n    };\n  }\n}\n","<div class=\"dashboard\">\n  <div class=\"metrics\">\n    <div class=\"metric-card\">\n      <h3>Total Users</h3>\n      <p>{{ totalUsers }}</p>\n    </div>\n    <div class=\"metric-card\">\n      <h3>Total Rooms</h3>\n      <p>{{ totalRooms }}</p>\n    </div>\n    <div class=\"metric-card\">\n      <h3>Total Bookings</h3>\n      <p>{{ totalBookings }}</p>\n    </div>\n    <div class=\"metric-card\">\n      <h3>Total Payments</h3>\n      <p>{{ totalPayments }}</p>\n    </div>\n  </div>\n  <div id=\"line-chart\" style=\"height: 350px;\"></div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}