{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/pg-user/pg-user.service\";\nexport class AddUserComponent {\n  constructor(fb, pgUserService) {\n    this.fb = fb;\n    this.pgUserService = pgUserService;\n    this.isEditMode = false;\n    this.pgUserUpdated = new EventEmitter();\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PgUserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user\"]],\n    inputs: {\n      pgUser: \"pgUser\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      pgUserUpdated: \"pgUserUpdated\"\n    },\n    decls: 34,\n    vars: 3,\n    consts: [[\"id\", \"addEditPGUserModal\", \"tabindex\", \"-1\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"ext\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"ext\", \"formControlName\", \"ext\", 1, \"form-control\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"completion\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"completion\", \"formControlName\", \"completion\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7)(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Ext.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Completion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 19)(30, \"button\", 20);\n        i0.ɵɵtext(31, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function AddUserComponent_Template_button_click_32_listener() {\n          return ctx.savePGUser();\n        });\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit PG User\" : \"Add PG User\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.pgUserForm);\n        i0.ɵɵadvance(25);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Save changes\" : \"Add User\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","AddUserComponent","constructor","fb","pgUserService","pgUserForm","group","name","required","ext","city","startDate","completion","ngOnInit","isEditMode","pgUser","patchValue","savePGUser","valid","updatePGUser","id","value","subscribe","pgUserUpdated","emit","closeModal","createPGUser","modal","bootstrap","Modal","getInstance","document","getElementById","hide","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\add-user\\add-user.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\add-user\\add-user.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PgUserService } from '../../../services/pg-user/pg-user.service';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  @Input() pgUser: any;\n  @Input() isEditMode: boolean = false;\n  @Output() pgUserUpdated: EventEmitter<void> = new EventEmitter<void>();\n\n  pgUserForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private pgUserService: PgUserService) {\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditPGUserModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{isEditMode ? 'Edit PG User' : 'Add PG User'}}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"pgUserForm\">\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"ext\" class=\"form-label\">Ext.</label>\n            <input type=\"text\" id=\"ext\" class=\"form-control\" formControlName=\"ext\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"city\" class=\"form-label\">City</label>\n            <input type=\"text\" id=\"city\" class=\"form-control\" formControlName=\"city\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"startDate\" class=\"form-label\">Start Date</label>\n            <input type=\"date\" id=\"startDate\" class=\"form-control\" formControlName=\"startDate\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"completion\" class=\"form-label\">Completion</label>\n            <input type=\"text\" id=\"completion\" class=\"form-control\" formControlName=\"completion\">\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"savePGUser()\">{{isEditMode ? 'Save changes' : 'Add User'}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}