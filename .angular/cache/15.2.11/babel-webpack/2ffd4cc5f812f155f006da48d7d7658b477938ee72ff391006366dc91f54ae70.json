{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/payment/payment.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AddPaymentComponent {\n  constructor(paymentService) {\n    this.paymentService = paymentService;\n    this.payment = {};\n    this.isEditMode = false;\n    this.paymentUpdated = new EventEmitter();\n  }\n  submitForm() {\n    if (this.isEditMode) {\n      this.paymentService.updatePayment(this.payment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.paymentService.createPayment(this.payment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n  closeModal() {\n    const modalElement = document.getElementById('addEditPaymentModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddPaymentComponent_Factory(t) {\n    return new (t || AddPaymentComponent)(i0.ɵɵdirectiveInject(i1.PaymentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPaymentComponent,\n    selectors: [[\"app-add-payment\"]],\n    inputs: {\n      payment: \"payment\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      paymentUpdated: \"paymentUpdated\"\n    },\n    decls: 45,\n    vars: 7,\n    consts: [[\"id\", \"addEditPaymentModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addEditPaymentModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addEditPaymentModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"booking_id\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"booking_id\", \"name\", \"booking_id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"amount\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"payment_date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"payment_date\", \"name\", \"payment_date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"payment_method\", 1, \"form-label\"], [\"id\", \"payment_method\", \"name\", \"payment_method\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"cash\"], [\"value\", \"credit_card\"], [\"value\", \"debit_card\"], [\"value\", \"net_banking\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"paid\"], [\"value\", \"pending\"], [\"value\", \"failed\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function AddPaymentComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Booking ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPaymentComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.payment.booking_id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPaymentComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.payment.amount = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Payment Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPaymentComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.payment.payment_date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPaymentComponent_Template_select_ngModelChange_24_listener($event) {\n          return ctx.payment.payment_method = $event;\n        });\n        i0.ɵɵelementStart(25, \"option\", 17);\n        i0.ɵɵtext(26, \"Cash\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 18);\n        i0.ɵɵtext(28, \"Credit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 19);\n        i0.ɵɵtext(30, \"Debit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 20);\n        i0.ɵɵtext(32, \"Net Banking\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 8)(34, \"label\", 21);\n        i0.ɵɵtext(35, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"select\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function AddPaymentComponent_Template_select_ngModelChange_36_listener($event) {\n          return ctx.payment.status = $event;\n        });\n        i0.ɵɵelementStart(37, \"option\", 23);\n        i0.ɵɵtext(38, \"Paid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 24);\n        i0.ɵɵtext(40, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"option\", 25);\n        i0.ɵɵtext(42, \"Failed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"button\", 26);\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Payment\" : \"Add Payment\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.booking_id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.amount);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.payment_date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.payment_method);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.status);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update\" : \"Add\");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAmCA,YAAY,QAAQ,eAAe;;;;AAStE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJzB,YAAO,GAAQ,EAAE;IACjB,eAAU,GAAY,KAAK;IAC1B,mBAAc,GAAG,IAAIH,YAAY,EAAQ;EAEE;EAErDI,UAAU;IACR,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACF,cAAc,CAACG,aAAa,CAAC,IAAI,CAACC,OAAO,CAAC,CAACC,SAAS,CAAC,MAAK;QAC7D,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACR,cAAc,CAACS,aAAa,CAAC,IAAI,CAACL,OAAO,CAAC,CAACC,SAAS,CAAC,MAAK;QAC7D,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;;EAEN;EAEAA,UAAU;IACR,MAAME,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;IACnE,MAAMC,KAAK,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACN,YAAY,CAAC;IACvDG,KAAK,CAACI,IAAI,EAAE;EACd;EAAC;qBAzBUnB,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAoB;IAAAC;MAAAf;MAAAF;IAAA;IAAAkB;MAAAd;IAAA;IAAAe;IAAAC;IAAAC;IAAAC;MAAA;QCVhCC,8BAA6H;QAI/DA,YAAiD;QAAAA,iBAAK;QAC5GA,4BAA4F;QAC9FA,iBAAM;QACNA,8BAAwB;QAChBA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QAE7BD,8BAAkB;QAC2BA,2BAAU;QAAAA,iBAAQ;QAC7DA,kCAAsH;QAA5DA;UAAA;QAAA,EAAgC;QAA1FA,iBAAsH;QAExHA,+BAAkB;QACuBA,uBAAM;QAAAA,iBAAQ;QACrDA,kCAA0G;QAApDA;UAAA;QAAA,EAA4B;QAAlFA,iBAA0G;QAE5GA,+BAAkB;QAC6BA,6BAAY;QAAAA,iBAAQ;QACjEA,kCAA0H;QAAhEA;UAAA;QAAA,EAAkC;QAA5FA,iBAA0H;QAE5HA,+BAAkB;QAC+BA,+BAAc;QAAAA,iBAAQ;QACrEA,mCAAqH;QAApEA;UAAA;QAAA,EAAoC;QACnFA,mCAAqB;QAAAA,qBAAI;QAAAA,iBAAS;QAClCA,mCAA4B;QAAAA,4BAAW;QAAAA,iBAAS;QAChDA,mCAA2B;QAAAA,2BAAU;QAAAA,iBAAS;QAC9CA,mCAA4B;QAAAA,4BAAW;QAAAA,iBAAS;QAGpDA,+BAAkB;QACuBA,uBAAM;QAAAA,iBAAQ;QACrDA,mCAA6F;QAApDA;UAAA;QAAA,EAA4B;QACnEA,mCAAqB;QAAAA,qBAAI;QAAAA,iBAAS;QAClCA,mCAAwB;QAAAA,wBAAO;QAAAA,iBAAS;QACxCA,mCAAuB;QAAAA,uBAAM;QAAAA,iBAAS;QAG1CA,mCAA8C;QAAAA,aAAmC;QAAAA,iBAAS;;;QAnCtCA,eAAiD;QAAjDA,qEAAiD;QAQzCA,eAAgC;QAAhCA,gDAAgC;QAIpCA,eAA4B;QAA5BA,4CAA4B;QAIxBA,eAAkC;QAAlCA,kDAAkC;QAI3CA,eAAoC;QAApCA,oDAAoC;QAS5CA,gBAA4B;QAA5BA,4CAA4B;QAMzBA,eAAmC;QAAnCA,uDAAmC","names":["EventEmitter","AddPaymentComponent","constructor","paymentService","submitForm","isEditMode","updatePayment","payment","subscribe","paymentUpdated","emit","closeModal","createPayment","modalElement","document","getElementById","modal","bootstrap","Modal","getInstance","hide","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\payment\\add-payment\\add-payment.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\payment\\add-payment\\add-payment.component.html"],"sourcesContent":["\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { PaymentService } from 'src/app/services/payment/payment.service';\n\ndeclare var bootstrap: any;\n@Component({\n  selector: 'app-add-payment',\n  templateUrl: './add-payment.component.html',\n  styleUrls: ['./add-payment.component.css']\n})\nexport class AddPaymentComponent {\n  @Input() payment: any = {};\n  @Input() isEditMode: boolean = false;\n  @Output() paymentUpdated = new EventEmitter<void>();\n\n  constructor(private paymentService: PaymentService) {}\n\n  submitForm() {\n    if (this.isEditMode) {\n      this.paymentService.updatePayment(this.payment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.paymentService.createPayment(this.payment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('addEditPaymentModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditPaymentModal\" tabindex=\"-1\" aria-labelledby=\"addEditPaymentModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addEditPaymentModalLabel\">{{ isEditMode ? 'Edit Payment' : 'Add Payment' }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form (ngSubmit)=\"submitForm()\">\n          <!-- Add your form fields here -->\n          <div class=\"mb-3\">\n            <label for=\"booking_id\" class=\"form-label\">Booking ID</label>\n            <input type=\"number\" class=\"form-control\" id=\"booking_id\" [(ngModel)]=\"payment.booking_id\" name=\"booking_id\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"amount\" class=\"form-label\">Amount</label>\n            <input type=\"number\" class=\"form-control\" id=\"amount\" [(ngModel)]=\"payment.amount\" name=\"amount\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"payment_date\" class=\"form-label\">Payment Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"payment_date\" [(ngModel)]=\"payment.payment_date\" name=\"payment_date\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"payment_method\" class=\"form-label\">Payment Method</label>\n            <select class=\"form-control\" id=\"payment_method\" [(ngModel)]=\"payment.payment_method\" name=\"payment_method\" required>\n              <option value=\"cash\">Cash</option>\n              <option value=\"credit_card\">Credit Card</option>\n              <option value=\"debit_card\">Debit Card</option>\n              <option value=\"net_banking\">Net Banking</option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select class=\"form-control\" id=\"status\" [(ngModel)]=\"payment.status\" name=\"status\" required>\n              <option value=\"paid\">Paid</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"failed\">Failed</option>\n            </select>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">{{ isEditMode ? 'Update' : 'Add' }}</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}