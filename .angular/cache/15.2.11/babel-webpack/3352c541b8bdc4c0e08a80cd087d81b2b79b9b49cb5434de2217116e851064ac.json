{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/room/room.service\";\nexport class AddRoomComponent {\n  constructor(fb, roomService) {\n    this.fb = fb;\n    this.roomService = roomService;\n    this.isEditMode = false;\n    this.roomUpdated = new EventEmitter();\n    this.roomForm = this.fb.group({\n      room_number: [''],\n      type: [''],\n      rent: [''],\n      status: [''],\n      description: ['']\n    });\n  }\n  ngOnChanges() {\n    if (this.isEditMode && this.room) {\n      this.roomForm.patchValue(this.room);\n    } else {\n      this.roomForm.reset();\n    }\n  }\n  onSubmit() {\n    if (this.isEditMode) {\n      this.roomService.updateRoom(this.roomForm.value).subscribe(() => {\n        this.roomUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.roomService.createRoom(this.roomForm.value).subscribe(() => {\n        this.roomUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n  closeModal() {\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddRoomComponent_Factory(t) {\n    return new (t || AddRoomComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RoomService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRoomComponent,\n    selectors: [[\"app-add-room\"]],\n    inputs: {\n      room: \"room\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      roomUpdated: \"roomUpdated\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 43,\n    vars: 3,\n    consts: [[\"id\", \"addEditRoomModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addEditRoomModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addEditRoomModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"room_number\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"room_number\", \"id\", \"room_number\", 1, \"form-control\"], [\"for\", \"type\", 1, \"form-label\"], [\"formControlName\", \"type\", \"id\", \"type\", 1, \"form-control\"], [\"value\", \"single\"], [\"value\", \"double\"], [\"value\", \"suite\"], [\"for\", \"rent\", 1, \"form-label\"], [\"type\", \"number\", \"formControlName\", \"rent\", \"id\", \"rent\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [\"formControlName\", \"status\", \"id\", \"status\", 1, \"form-control\"], [\"value\", \"available\"], [\"value\", \"occupied\"], [\"value\", \"maintenance\"], [\"for\", \"description\", 1, \"form-label\"], [\"formControlName\", \"description\", \"id\", \"description\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddRoomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function AddRoomComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Room Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 12)(17, \"option\", 13);\n        i0.ɵɵtext(18, \"Single\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 14);\n        i0.ɵɵtext(20, \"Double\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 15);\n        i0.ɵɵtext(22, \"Suite\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 8)(24, \"label\", 16);\n        i0.ɵɵtext(25, \"Rent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 8)(28, \"label\", 18);\n        i0.ɵɵtext(29, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 19)(31, \"option\", 20);\n        i0.ɵɵtext(32, \"Available\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 21);\n        i0.ɵɵtext(34, \"Occupied\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 22);\n        i0.ɵɵtext(36, \"Maintenance\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 8)(38, \"label\", 23);\n        i0.ɵɵtext(39, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"textarea\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 25);\n        i0.ɵɵtext(42);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Room\" : \"Add Room\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.roomForm);\n        i0.ɵɵadvance(34);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Add\", \" Room\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;AAWtE,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAL/C,eAAU,GAAY,KAAK;IAC1B,gBAAW,GAAG,IAAIJ,YAAY,EAAQ;IAK9C,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,IAAI,EAAE;MAChC,IAAI,CAACT,QAAQ,CAACU,UAAU,CAAC,IAAI,CAACD,IAAI,CAAC;KACpC,MAAM;MACL,IAAI,CAACT,QAAQ,CAACW,KAAK,EAAE;;EAEzB;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACJ,UAAU,EAAE;MACnB,IAAI,CAACT,WAAW,CAACc,UAAU,CAAC,IAAI,CAACb,QAAQ,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC9D,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE;QACvB,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACnB,WAAW,CAACoB,UAAU,CAAC,IAAI,CAACnB,QAAQ,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC9D,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE;QACvB,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;;EAEN;EAEAA,UAAU;IACR,MAAME,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAChE,MAAMC,KAAK,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACN,YAAY,CAAC;IACvDG,KAAK,CAACI,IAAI,EAAE;EACd;EAAC;qBA5CU/B,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAgC;IAAAC;MAAApB;MAAAD;IAAA;IAAAsB;MAAAd;IAAA;IAAAe;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX7BC,8BAAuH;QAI5DA,YAA2C;QAAAA,iBAAK;QACnGA,4BAA4F;QAC9FA,iBAAM;QACNA,8BAAwB;QACOA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAClDD,8BAAkB;QAC4BA,4BAAW;QAAAA,iBAAQ;QAC/DA,6BAAuF;QACzFA,iBAAM;QACNA,+BAAkB;QACqBA,qBAAI;QAAAA,iBAAQ;QACjDA,mCAA8D;QACrCA,uBAAM;QAAAA,iBAAS;QACtCA,mCAAuB;QAAAA,uBAAM;QAAAA,iBAAS;QACtCA,mCAAsB;QAAAA,sBAAK;QAAAA,iBAAS;QAGxCA,+BAAkB;QACqBA,qBAAI;QAAAA,iBAAQ;QACjDA,6BAA2E;QAC7EA,iBAAM;QACNA,+BAAkB;QACuBA,uBAAM;QAAAA,iBAAQ;QACrDA,mCAAkE;QACtCA,0BAAS;QAAAA,iBAAS;QAC5CA,mCAAyB;QAAAA,yBAAQ;QAAAA,iBAAS;QAC1CA,mCAA4B;QAAAA,4BAAW;QAAAA,iBAAS;QAGpDA,+BAAkB;QAC4BA,4BAAW;QAAAA,iBAAQ;QAC/DA,gCAAyF;QAC3FA,iBAAM;QACNA,mCAA8C;QAAAA,aAAwC;QAAAA,iBAAS;;;QAjC9CA,eAA2C;QAA3CA,+DAA2C;QAIxFA,eAAsB;QAAtBA,wCAAsB;QA6BoBA,gBAAwC;QAAxCA,qEAAwC","names":["EventEmitter","AddRoomComponent","constructor","fb","roomService","roomForm","group","room_number","type","rent","status","description","ngOnChanges","isEditMode","room","patchValue","reset","onSubmit","updateRoom","value","subscribe","roomUpdated","emit","closeModal","createRoom","modalElement","document","getElementById","modal","bootstrap","Modal","getInstance","hide","selectors","inputs","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\rooms\\add-room\\add-room.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\rooms\\add-room\\add-room.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RoomService } from 'src/app/services/room/room.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})\nexport class AddRoomComponent {\n\n  @Input() room: any;\n  @Input() isEditMode: boolean = false;\n  @Output() roomUpdated = new EventEmitter<void>();\n\n  roomForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private roomService: RoomService) {\n    this.roomForm = this.fb.group({\n      room_number: [''],\n      type: [''],\n      rent: [''],\n      status: [''],\n      description: ['']\n    });\n  }\n\n  ngOnChanges() {\n    if (this.isEditMode && this.room) {\n      this.roomForm.patchValue(this.room);\n    } else {\n      this.roomForm.reset();\n    }\n  }\n\n  onSubmit() {\n    if (this.isEditMode) {\n      this.roomService.updateRoom(this.roomForm.value).subscribe(() => {\n        this.roomUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.roomService.createRoom(this.roomForm.value).subscribe(() => {\n        this.roomUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditRoomModal\" tabindex=\"-1\" aria-labelledby=\"addEditRoomModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addEditRoomModalLabel\">{{ isEditMode ? 'Edit Room' : 'Add Room' }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"roomForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"mb-3\">\n            <label for=\"room_number\" class=\"form-label\">Room Number</label>\n            <input type=\"text\" formControlName=\"room_number\" class=\"form-control\" id=\"room_number\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"type\" class=\"form-label\">Type</label>\n            <select formControlName=\"type\" class=\"form-control\" id=\"type\">\n              <option value=\"single\">Single</option>\n              <option value=\"double\">Double</option>\n              <option value=\"suite\">Suite</option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"rent\" class=\"form-label\">Rent</label>\n            <input type=\"number\" formControlName=\"rent\" class=\"form-control\" id=\"rent\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select formControlName=\"status\" class=\"form-control\" id=\"status\">\n              <option value=\"available\">Available</option>\n              <option value=\"occupied\">Occupied</option>\n              <option value=\"maintenance\">Maintenance</option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">Description</label>\n            <textarea formControlName=\"description\" class=\"form-control\" id=\"description\"></textarea>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">{{ isEditMode ? 'Update' : 'Add' }} Room</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}