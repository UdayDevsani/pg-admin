{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/pg-user/pg-user.service\";\nimport * as i2 from \"@angular/common\";\nfunction PgUserComponent_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PgUserComponent_tr_37_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openEditPGUserModal(user_r1));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function PgUserComponent_tr_37_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deletePGUser(user_r1.id));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.ext);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.completion);\n  }\n}\nexport class PgUserComponent {\n  constructor(pgUserService) {\n    this.pgUserService = pgUserService;\n    this.pgUsers = [];\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.loadPGUsers();\n  }\n  loadPGUsers() {\n    this.pgUserService.getPGUsers().subscribe(users => {\n      this.pgUsers = users;\n    });\n  }\n  openAddPGUserModal() {\n    this.isEditMode = false;\n    this.selectedUser = null;\n    const modalElement = document.getElementById('addEditPGUserModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  openEditPGUserModal(user) {\n    this.isEditMode = true;\n    this.selectedUser = user;\n    const modalElement = document.getElementById('addEditPGUserModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  deletePGUser(id) {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers();\n    });\n  }\n  onPGUserUpdated() {\n    this.loadPGUsers();\n  }\n  static #_ = this.ɵfac = function PgUserComponent_Factory(t) {\n    return new (t || PgUserComponent)(i0.ɵɵdirectiveInject(i1.PgUserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PgUserComponent,\n    selectors: [[\"app-pg-user\"]],\n    viewQuery: function PgUserComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(AddEditPgUserModalComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addEditPgUserModal = _t.first);\n      }\n    },\n    decls: 39,\n    vars: 3,\n    consts: [[1, \"pagetitle\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"href\", \"index.html\"], [1, \"breadcrumb-item\", \"active\"], [1, \"section\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\", \"datatable\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pgUser\", \"isEditMode\", \"pgUserUpdated\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function PgUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"PG Users Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"nav\")(4, \"ol\", 1)(5, \"li\", 2)(6, \"a\", 3);\n        i0.ɵɵtext(7, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\", 2);\n        i0.ɵɵtext(9, \"PG Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"li\", 4);\n        i0.ɵɵtext(11, \"PG Users Tables\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"section\", 5)(13, \"div\", 6)(14, \"div\", 7)(15, \"div\", 8)(16, \"div\", 9)(17, \"h5\", 10);\n        i0.ɵɵtext(18, \" Datatables \");\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function PgUserComponent_Template_button_click_19_listener() {\n          return ctx.openAddPGUserModal();\n        });\n        i0.ɵɵtext(20, \"Add PG User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"table\", 12)(22, \"thead\")(23, \"tr\")(24, \"th\");\n        i0.ɵɵtext(25, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Ext.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Completion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tbody\");\n        i0.ɵɵtemplate(37, PgUserComponent_tr_37_Template, 16, 5, \"tr\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(38, \"app-add-edit-pg-user-modal\", 14);\n        i0.ɵɵlistener(\"pgUserUpdated\", function PgUserComponent_Template_app_add_edit_pg_user_modal_pgUserUpdated_38_listener() {\n          return ctx.onPGUserUpdated();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(37);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pgUsers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pgUser\", ctx.selectedUser)(\"isEditMode\", ctx.isEditMode);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","PgUserComponent","constructor","pgUserService","ngOnInit","loadPGUsers","getPGUsers","subscribe","users","pgUsers","openAddPGUserModal","isEditMode","selectedUser","modalElement","document","getElementById","modal","bootstrap","Modal","show","openEditPGUserModal","user","deletePGUser","id","onPGUserUpdated","selectors","viewQuery","AddEditPgUserModalComponent","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.html","D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.ts"],"sourcesContent":["<div class=\"pagetitle\">\n  <h1>PG Users Tables</h1>\n  <nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\n      <li class=\"breadcrumb-item\">PG Users</li>\n      <li class=\"breadcrumb-item active\">PG Users Tables</li>\n    </ol>\n  </nav>\n</div>\n\n<section class=\"section\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            Datatables\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openAddPGUserModal()\">Add PG User</button>\n          </h5>\n\n          <!-- Table displaying PG Users -->\n          <table class=\"table datatable\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Ext.</th>\n                <th>City</th>\n                <th>Start Date</th>\n                <th>Completion</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let user of pgUsers\">\n                <td>{{ user.name }}</td>\n                <td>{{ user.ext }}</td>\n                <td>{{ user.city }}</td>\n                <td>{{ user.startDate }}</td>\n                <td>{{ user.completion }}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"openEditPGUserModal(user)\">Edit</button>\n                  <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePGUser(user.id)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Modal for Adding/Editing PG User -->\n<app-add-edit-pg-user-modal\n  [pgUser]=\"selectedUser\"\n  [isEditMode]=\"isEditMode\"\n  (pgUserUpdated)=\"onPGUserUpdated()\">\n</app-add-edit-pg-user-modal>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PgUserService } from 'src/app/services/pg-user/pg-user.service';\nimport { AddUserComponent } from './add-user/add-user.component';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-pg-user',\n  templateUrl: './pg-user.component.html',\n  styleUrls: ['./pg-user.component.css']\n})\nexport class PgUserComponent implements OnInit {\n  pgUsers: any[] = [];\n  selectedUser: any;\n  isEditMode: boolean = false;\n\n  @ViewChild(AddEditPgUserModalComponent) addEditPgUserModal!: AddEditPgUserModalComponent;\n\n  constructor(private pgUserService: PgUserService) {}\n\n  ngOnInit(): void {\n    this.loadPGUsers();\n  }\n\n  loadPGUsers() {\n    this.pgUserService.getPGUsers().subscribe((users) => {\n      this.pgUsers = users;\n    });\n  }\n\n  openAddPGUserModal() {\n    this.isEditMode = false;\n    this.selectedUser = null;\n    const modalElement = document.getElementById('addEditPGUserModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  openEditPGUserModal(user: any) {\n    this.isEditMode = true;\n    this.selectedUser = user;\n    const modalElement = document.getElementById('addEditPGUserModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  deletePGUser(id: number) {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers();\n    });\n  }\n\n  onPGUserUpdated() {\n    this.loadPGUsers();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}