{"ast":null,"code":"import * as echarts from 'echarts';\nimport * as i0 from \"@angular/core\";\nexport class DashboardComponent {\n  constructor() {\n    this.totalRooms = 50;\n    this.bookedRooms = 30;\n    this.availableRooms = 20;\n    this.totalGuests = 45;\n    this.newBookings = 5;\n    this.pendingInquiries = 2;\n    this.revenue = [2000, 7000, 8000, 10000];\n    this.recentBookings = [{\n      details: 'Booking 1 details'\n    }, {\n      details: 'Booking 2 details'\n    }];\n    this.upcomingActivities = [{\n      details: 'Activity 1 details'\n    }, {\n      details: 'Activity 2 details'\n    }];\n    this.isDropdownOpen = false;\n    this.cards = [{\n      title: 'Total Rooms',\n      value: this.totalRooms\n    }, {\n      title: 'Booked Rooms',\n      value: this.bookedRooms\n    }, {\n      title: 'Available Rooms',\n      value: this.availableRooms\n    }, {\n      title: 'Total Guests',\n      value: this.totalGuests\n    }, {\n      title: 'New Bookings',\n      value: this.newBookings\n    }, {\n      title: 'Pending Inquiries',\n      value: this.pendingInquiries\n    }, {\n      title: 'Revenue',\n      value: this.revenue\n    }];\n    this.quickActions = [{\n      label: 'Book a Room',\n      link: '/book'\n    }, {\n      label: 'View Rooms',\n      link: '/rooms'\n    }, {\n      label: 'Add New Room',\n      link: '/add-room'\n    }, {\n      label: 'Manage Guests',\n      link: '/manage-guests'\n    }, {\n      label: 'Send Notifications',\n      link: '/send-notifications'\n    }];\n  }\n  ngOnInit() {\n    this.initRoomsChart();\n    this.initRevenueChart();\n  }\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n  initRoomsChart() {\n    const roomsChart = echarts.init(document.getElementById('roomsChart'));\n    const roomsOption = {\n      title: {\n        text: 'Rooms Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Rooms']\n      },\n      xAxis: {\n        data: ['Total Rooms', 'Booked Rooms', 'Available Rooms']\n      },\n      yAxis: {},\n      series: [{\n        name: 'Rooms',\n        type: 'bar',\n        data: [this.totalRooms, this.bookedRooms, this.availableRooms]\n      }]\n    };\n    roomsChart.setOption(roomsOption);\n  }\n  initRevenueChart() {\n    const revenueChart = echarts.init(document.getElementById('revenueChart'));\n    const revenueOption = {\n      title: {\n        text: 'Revenue Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Revenue']\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Revenue']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Revenue',\n        type: 'scatter',\n        smooth: true,\n        data: [this.revenue]\n      }]\n    };\n    revenueChart.setOption(revenueOption);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 0,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {},\n    styles: [\".dashboard[_ngcontent-%COMP%] {\\r\\n  padding: 20px;\\r\\n  max-width: 1200px;\\r\\n  margin: 0 auto; \\r\\n}\\r\\n\\r\\n.row[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  justify-content: space-between; \\r\\n}\\r\\n\\r\\n.col[_ngcontent-%COMP%] {\\r\\n  flex: 1;\\r\\n  min-width: 250px; \\r\\n  padding: 10px;\\r\\n  box-sizing: border-box; \\r\\n  margin-bottom: 20px; \\r\\n}\\r\\n\\r\\n.metric-card[_ngcontent-%COMP%], .chart-card[_ngcontent-%COMP%], .latest-activities[_ngcontent-%COMP%] {\\r\\n  background-color: #f0f0f0;\\r\\n  border: 1px solid #ccc;\\r\\n  text-align: center;\\r\\n  padding: 20px;\\r\\n  box-sizing: border-box;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.chart-card[_ngcontent-%COMP%] {\\r\\n  background-color: #f9f9f9;\\r\\n}\\r\\n\\r\\n.chart-title[_ngcontent-%COMP%] {\\r\\n  font-size: 1.5em;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.actions-dropdown[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.dropdown-button[_ngcontent-%COMP%] {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #007bff;\\r\\n  color: #fff;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.dropdown-button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\nul[_ngcontent-%COMP%] {\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.show[_ngcontent-%COMP%] {\\r\\n  display: block !important;\\r\\n}\\r\\n\\r\\n.hide[_ngcontent-%COMP%] {\\r\\n  display: none !important;\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .col[_ngcontent-%COMP%] {\\r\\n    min-width: 100%; \\r\\n    margin-bottom: 20px; \\r\\n  }\\r\\n\\r\\n  .dropdown-button[_ngcontent-%COMP%] {\\r\\n    width: 100%; \\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixjQUFjLEVBQUUsK0JBQStCO0FBQ2pEOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixlQUFlO0VBQ2YsOEJBQThCLEVBQUUsaUNBQWlDO0FBQ25FOztBQUVBO0VBQ0UsT0FBTztFQUNQLGdCQUFnQixFQUFFLG9DQUFvQztFQUN0RCxhQUFhO0VBQ2Isc0JBQXNCLEVBQUUsc0RBQXNEO0VBQzlFLG1CQUFtQixFQUFFLDJCQUEyQjtBQUNsRDs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUEsMkJBQTJCO0FBQzNCO0VBQ0U7SUFDRSxlQUFlLEVBQUUsNkNBQTZDO0lBQzlELG1CQUFtQixFQUFFLDhCQUE4QjtFQUNyRDs7RUFFQTtJQUNFLFdBQVcsRUFBRSwwREFBMEQ7RUFDekU7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87IC8qIENlbnRlciBhbGlnbiB0aGUgZGFzaGJvYXJkICovXHJcbn1cclxuXHJcbi5yb3cge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyAvKiBFbnN1cmUgc3BhY2UgYmV0d2VlbiBjb2x1bW5zICovXHJcbn1cclxuXHJcbi5jb2wge1xyXG4gIGZsZXg6IDE7XHJcbiAgbWluLXdpZHRoOiAyNTBweDsgLyogU2V0IGEgbWluaW11bSB3aWR0aCBmb3IgY29sdW1ucyAqL1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogSW5jbHVkZSBwYWRkaW5nIGluIHRoZSBlbGVtZW50J3Mgd2lkdGggYW5kIGhlaWdodCAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIEFkZCBzcGFjZSBiZXR3ZWVuIHJvd3MgKi9cclxufVxyXG5cclxuLm1ldHJpYy1jYXJkLCAuY2hhcnQtY2FyZCwgLmxhdGVzdC1hY3Rpdml0aWVzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5jaGFydC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG59XHJcblxyXG4uY2hhcnQtdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmFjdGlvbnMtZHJvcGRvd24ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uZHJvcGRvd24tYnV0dG9uIHtcclxuICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZHJvcGRvd24tYnV0dG9uIGkge1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcblxyXG51bCB7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbnVsIGxpIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uc2hvdyB7XHJcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmhpZGUge1xyXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLyogUmVzcG9uc2l2ZSBhZGp1c3RtZW50cyAqL1xyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAuY29sIHtcclxuICAgIG1pbi13aWR0aDogMTAwJTsgLyogTWFrZSBjb2x1bW5zIGZ1bGwgd2lkdGggb24gc21hbGwgc2NyZWVucyAqL1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogQWRkIHNwYWNlIGJldHdlZW4gY29sdW1ucyAqL1xyXG4gIH1cclxuXHJcbiAgLmRyb3Bkb3duLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwJTsgLyogRW5zdXJlIGRyb3Bkb3duIGJ1dHRvbiBpcyBmdWxsIHdpZHRoIG9uIHNtYWxsIHNjcmVlbnMgKi9cclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["echarts","DashboardComponent","constructor","details","title","value","totalRooms","bookedRooms","availableRooms","totalGuests","newBookings","pendingInquiries","revenue","label","link","ngOnInit","initRoomsChart","initRevenueChart","toggleDropdown","isDropdownOpen","roomsChart","init","document","getElementById","roomsOption","text","tooltip","legend","data","xAxis","yAxis","series","name","type","setOption","revenueChart","revenueOption","smooth","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as echarts from 'echarts';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  totalRooms = 50;\n  bookedRooms = 30;\n  availableRooms = 20;\n  totalGuests = 45;\n  newBookings = 5;\n  pendingInquiries = 2;\n  revenue = [2000,7000,8000,10000];\n  recentBookings = [\n    { details: 'Booking 1 details' },\n    { details: 'Booking 2 details' }\n  ];\n  upcomingActivities = [\n    { details: 'Activity 1 details' },\n    { details: 'Activity 2 details' }\n  ];\n\n  isDropdownOpen = false;\n\n  cards = [\n    { title: 'Total Rooms', value: this.totalRooms },\n    { title: 'Booked Rooms', value: this.bookedRooms },\n    { title: 'Available Rooms', value: this.availableRooms },\n    { title: 'Total Guests', value: this.totalGuests },\n    { title: 'New Bookings', value: this.newBookings },\n    { title: 'Pending Inquiries', value: this.pendingInquiries },\n    { title: 'Revenue', value: this.revenue }\n  ];\n\n  quickActions = [\n    { label: 'Book a Room', link: '/book' },\n    { label: 'View Rooms', link: '/rooms' },\n    { label: 'Add New Room', link: '/add-room' },\n    { label: 'Manage Guests', link: '/manage-guests' },\n    { label: 'Send Notifications', link: '/send-notifications' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initRoomsChart();\n    this.initRevenueChart();\n  }\n\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  initRoomsChart() {\n    const roomsChart = echarts.init(document.getElementById('roomsChart') as HTMLDivElement);\n\n    const roomsOption = {\n      title: {\n        text: 'Rooms Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Rooms']\n      },\n      xAxis: {\n        data: ['Total Rooms', 'Booked Rooms', 'Available Rooms']\n      },\n      yAxis: {},\n      series: [{\n        name: 'Rooms',\n        type: 'bar',\n        data: [this.totalRooms, this.bookedRooms, this.availableRooms]\n      }]\n    };\n\n    roomsChart.setOption(roomsOption);\n  }\n\n  initRevenueChart() {\n    const revenueChart = echarts.init(document.getElementById('revenueChart') as HTMLDivElement);\n\n    const revenueOption = {\n      title: {\n        text: 'Revenue Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Revenue']\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Revenue']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Revenue',\n        type: 'scatter',\n        smooth: true,\n        data: [this.revenue]\n      }]\n    };\n\n    revenueChart.setOption(revenueOption);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}