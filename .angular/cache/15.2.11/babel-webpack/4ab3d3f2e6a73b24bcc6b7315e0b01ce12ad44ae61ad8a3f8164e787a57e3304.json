{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/payment/payment.service\";\nimport * as i3 from \"@angular/common\";\nfunction AddPaymentComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Booking ID is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPaymentComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Valid amount is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPaymentComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Payment date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPaymentComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Payment method is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPaymentComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Status is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddPaymentComponent {\n  constructor(fb, paymentService) {\n    this.fb = fb;\n    this.paymentService = paymentService;\n    this.payment = {};\n    this.isEditMode = false;\n    this.paymentUpdated = new EventEmitter();\n    this.paymentForm = this.fb.group({\n      booking_id: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(0)]],\n      payment_date: ['', Validators.required],\n      payment_method: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    if (this.isEditMode && this.payment) {\n      this.paymentForm.patchValue(this.payment);\n    }\n  }\n  submitForm() {\n    if (this.paymentForm.invalid) {\n      return;\n    }\n    if (this.isEditMode) {\n      const updatedPayment = {\n        ...this.payment,\n        ...this.paymentForm.value\n      };\n      this.paymentService.updatePayment(updatedPayment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.paymentService.createPayment(this.paymentForm.value).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n  closeModal() {\n    const modalElement = document.getElementById('addEditPaymentModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddPaymentComponent_Factory(t) {\n    return new (t || AddPaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PaymentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPaymentComponent,\n    selectors: [[\"app-add-payment\"]],\n    inputs: {\n      payment: \"payment\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      paymentUpdated: \"paymentUpdated\"\n    },\n    decls: 50,\n    vars: 8,\n    consts: [[\"id\", \"addEditPaymentModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addEditPaymentModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addEditPaymentModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"booking_id\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"booking_id\", \"formControlName\", \"booking_id\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"amount\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"amount\", \"formControlName\", \"amount\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"payment_date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"payment_date\", \"formControlName\", \"payment_date\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"payment_method\", 1, \"form-label\"], [\"id\", \"payment_method\", \"formControlName\", \"payment_method\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"cash\"], [\"value\", \"credit_card\"], [\"value\", \"debit_card\"], [\"value\", \"net_banking\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"formControlName\", \"status\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"paid\"], [\"value\", \"pending\"], [\"value\", \"failed\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n    template: function AddPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function AddPaymentComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Booking ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵtemplate(13, AddPaymentComponent_div_13_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵtemplate(18, AddPaymentComponent_div_18_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Payment Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 15);\n        i0.ɵɵtemplate(23, AddPaymentComponent_div_23_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 16);\n        i0.ɵɵtext(26, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"select\", 17)(28, \"option\", 18);\n        i0.ɵɵtext(29, \"Cash\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 19);\n        i0.ɵɵtext(31, \"Credit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 20);\n        i0.ɵɵtext(33, \"Debit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 21);\n        i0.ɵɵtext(35, \"Net Banking\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(36, AddPaymentComponent_div_36_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 8)(38, \"label\", 22);\n        i0.ɵɵtext(39, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"select\", 23)(41, \"option\", 24);\n        i0.ɵɵtext(42, \"Paid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"option\", 25);\n        i0.ɵɵtext(44, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"option\", 26);\n        i0.ɵɵtext(46, \"Failed\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(47, AddPaymentComponent_div_47_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"button\", 27);\n        i0.ɵɵtext(49);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Payment\" : \"Add Payment\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.paymentForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.paymentForm.get(\"booking_id\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.paymentForm.get(\"booking_id\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.paymentForm.get(\"amount\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.paymentForm.get(\"amount\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.paymentForm.get(\"payment_date\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.paymentForm.get(\"payment_date\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.paymentForm.get(\"payment_method\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.paymentForm.get(\"payment_method\")) == null ? null : tmp_5_0.touched));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.paymentForm.get(\"status\")) == null ? null : tmp_6_0.invalid) && ctx.paymentForm.get(\"status\").touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update\" : \"Add\");\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","i0","AddPaymentComponent","constructor","fb","paymentService","paymentForm","group","booking_id","required","amount","min","payment_date","payment_method","status","ngOnInit","isEditMode","payment","patchValue","submitForm","invalid","updatedPayment","value","updatePayment","subscribe","paymentUpdated","emit","closeModal","createPayment","modalElement","document","getElementById","modal","bootstrap","Modal","getInstance","hide","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\payment\\add-payment\\add-payment.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\payment\\add-payment\\add-payment.component.html"],"sourcesContent":["\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaymentService } from 'src/app/services/payment/payment.service';\n\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-add-payment',\n  templateUrl: './add-payment.component.html',\n  styleUrls: ['./add-payment.component.css']\n})\nexport class AddPaymentComponent implements OnInit {\n  @Input() payment: any = {};\n  @Input() isEditMode: boolean = false;\n  @Output() paymentUpdated = new EventEmitter<void>();\n  paymentForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private paymentService: PaymentService\n  ) {\n    this.paymentForm = this.fb.group({\n      booking_id: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(0)]],\n      payment_date: ['', Validators.required],\n      payment_method: ['', Validators.required],\n      status: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.isEditMode && this.payment) {\n      this.paymentForm.patchValue(this.payment);\n    }\n  }\n\n  submitForm() {\n    if (this.paymentForm.invalid) {\n      return;\n    }\n\n    if (this.isEditMode) {\n      const updatedPayment = { ...this.payment, ...this.paymentForm.value };\n      this.paymentService.updatePayment(updatedPayment).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.paymentService.createPayment(this.paymentForm.value).subscribe(() => {\n        this.paymentUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('addEditPaymentModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditPaymentModal\" tabindex=\"-1\" aria-labelledby=\"addEditPaymentModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addEditPaymentModalLabel\">{{ isEditMode ? 'Edit Payment' : 'Add Payment' }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"paymentForm\" (ngSubmit)=\"submitForm()\">\n          <div class=\"mb-3\">\n            <label for=\"booking_id\" class=\"form-label\">Booking ID</label>\n            <input type=\"number\" class=\"form-control\" id=\"booking_id\" formControlName=\"booking_id\" required>\n            <div *ngIf=\"paymentForm.get('booking_id')?.invalid && paymentForm.get('booking_id')?.touched\" class=\"text-danger\">\n              Booking ID is required.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"amount\" class=\"form-label\">Amount</label>\n            <input type=\"number\" class=\"form-control\" id=\"amount\" formControlName=\"amount\" required>\n            <div *ngIf=\"paymentForm.get('amount')?.invalid && paymentForm.get('amount')?.touched\" class=\"text-danger\">\n              Valid amount is required.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"payment_date\" class=\"form-label\">Payment Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"payment_date\" formControlName=\"payment_date\" required>\n            <div *ngIf=\"paymentForm.get('payment_date')?.invalid && paymentForm.get('payment_date')?.touched\" class=\"text-danger\">\n              Payment date is required.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"payment_method\" class=\"form-label\">Payment Method</label>\n            <select class=\"form-control\" id=\"payment_method\" formControlName=\"payment_method\" required>\n              <option value=\"cash\">Cash</option>\n              <option value=\"credit_card\">Credit Card</option>\n              <option value=\"debit_card\">Debit Card</option>\n              <option value=\"net_banking\">Net Banking</option>\n            </select>\n            <div *ngIf=\"paymentForm.get('payment_method')?.invalid && paymentForm.get('payment_method')?.touched\" class=\"text-danger\">\n              Payment method is required.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select class=\"form-control\" id=\"status\" formControlName=\"status\" required>\n              <option value=\"paid\">Paid</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"failed\">Failed</option>\n            </select>\n            <div *ngIf=\"paymentForm.get('status')?.invalid && paymentForm.get('status').touched\" class=\"text-danger\">\n              Status is required.\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">{{ isEditMode ? 'Update' : 'Add' }}</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}