{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/pg-user/pg-user.service\";\nexport class PgUserComponent {\n  constructor(pgUserService) {\n    this.pgUserService = pgUserService;\n    this.pgUsers = [];\n    this.newUser = {}; // Initialize with appropriate structure\n    this.editUser = null; // Store the user being edited\n  }\n\n  ngOnInit() {\n    this.loadPGUsers();\n  }\n  loadPGUsers() {\n    this.pgUserService.getPGUsers().subscribe(data => {\n      this.pgUsers = data;\n    });\n  }\n  createPGUser() {\n    this.pgUserService.createPGUser(this.newUser).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after creating\n      this.newUser = {}; // Reset form\n    });\n  }\n\n  editPGUser(user) {\n    this.editUser = {\n      ...user\n    }; // Clone user data for editing\n  }\n\n  updatePGUser() {\n    if (this.editUser) {\n      this.pgUserService.updatePGUser(this.editUser.id, this.editUser).subscribe(() => {\n        this.loadPGUsers(); // Refresh the list after updating\n        this.editUser = null; // Clear editing form\n      });\n    }\n  }\n\n  deletePGUser(id) {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after deleting\n    });\n  }\n  static #_ = this.ɵfac = function PgUserComponent_Factory(t) {\n    return new (t || PgUserComponent)(i0.ɵɵdirectiveInject(i1.PgUserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PgUserComponent,\n    selectors: [[\"app-pg-user\"]],\n    decls: 0,\n    vars: 0,\n    template: function PgUserComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAK1BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAJjC,YAAO,GAAU,EAAE;IACnB,YAAO,GAAQ,EAAE,CAAC,CAAC;IACnB,aAAQ,GAAQ,IAAI,CAAC,CAAC;EAE6B;;EAEnDC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;EACJ;EAEAE,YAAY;IACV,IAAI,CAACP,aAAa,CAACO,YAAY,CAAC,IAAI,CAACC,OAAO,CAAC,CAACJ,SAAS,CAAC,MAAK;MAC3D,IAAI,CAACF,WAAW,EAAE,CAAC,CAAC;MACpB,IAAI,CAACM,OAAO,GAAG,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ;;EAEAC,UAAU,CAACC,IAAS;IAClB,IAAI,CAACC,QAAQ,GAAG;MAAE,GAAGD;IAAI,CAAE,CAAC,CAAC;EAC/B;;EAEAE,YAAY;IACV,IAAI,IAAI,CAACD,QAAQ,EAAE;MACjB,IAAI,CAACX,aAAa,CAACY,YAAY,CAAC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,IAAI,CAACF,QAAQ,CAAC,CAACP,SAAS,CAAC,MAAK;QAC9E,IAAI,CAACF,WAAW,EAAE,CAAC,CAAC;QACpB,IAAI,CAACS,QAAQ,GAAG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC;;EAEN;;EAEAG,YAAY,CAACD,EAAU;IACrB,IAAI,CAACb,aAAa,CAACc,YAAY,CAACD,EAAE,CAAC,CAACT,SAAS,CAAC,MAAK;MACjD,IAAI,CAACF,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC,CAAC;EACJ;EAAC;qBAzCUJ,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAiB;IAAAC;IAAAC;IAAAC;IAAAC;EAAA","names":["PgUserComponent","constructor","pgUserService","ngOnInit","loadPGUsers","getPGUsers","subscribe","data","pgUsers","createPGUser","newUser","editPGUser","user","editUser","updatePGUser","id","deletePGUser","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PgUserService } from 'src/app/services/pg-user/pg-user.service';\n@Component({\n  selector: 'app-pg-user',\n  templateUrl: './pg-user.component.html',\n  styleUrls: ['./pg-user.component.css']\n})\nexport class PgUserComponent implements OnInit  {\n  pgUsers: any[] = [];\n  newUser: any = {}; // Initialize with appropriate structure\n  editUser: any = null; // Store the user being edited\n\n  constructor(private pgUserService: PgUserService) {}\n\n  ngOnInit(): void {\n    this.loadPGUsers();\n  }\n\n  loadPGUsers(): void {\n    this.pgUserService.getPGUsers().subscribe(data => {\n      this.pgUsers = data;\n    });\n  }\n\n  createPGUser(): void {\n    this.pgUserService.createPGUser(this.newUser).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after creating\n      this.newUser = {}; // Reset form\n    });\n  }\n\n  editPGUser(user: any): void {\n    this.editUser = { ...user }; // Clone user data for editing\n  }\n\n  updatePGUser(): void {\n    if (this.editUser) {\n      this.pgUserService.updatePGUser(this.editUser.id, this.editUser).subscribe(() => {\n        this.loadPGUsers(); // Refresh the list after updating\n        this.editUser = null; // Clear editing form\n      });\n    }\n  }\n\n  deletePGUser(id: number): void {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after deleting\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}