{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/pg-user/pg-user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PgUserComponent_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PgUserComponent_tr_37_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openAddEditPGUserModal(user_r1));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function PgUserComponent_tr_37_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deletePGUser(user_r1.id));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.ext);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.completion);\n  }\n}\nexport class PgUserComponent {\n  constructor(pgUserService) {\n    this.pgUserService = pgUserService;\n    this.pgUsers = [];\n    this.newUser = {}; // Initialize with appropriate structure\n    this.editUser = null; // Store the user being edited\n  }\n\n  ngOnInit() {\n    this.loadPGUsers();\n  }\n  openAddEditPGUserModal() {}\n  loadPGUsers() {\n    this.pgUserService.getPGUsers().subscribe(data => {\n      this.pgUsers = data;\n    });\n  }\n  createPGUser() {\n    this.pgUserService.createPGUser(this.newUser).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after creating\n      this.newUser = {}; // Reset form\n    });\n  }\n\n  editPGUser(user) {\n    this.editUser = {\n      ...user\n    }; // Clone user data for editing\n  }\n\n  updatePGUser() {\n    if (this.editUser) {\n      this.pgUserService.updatePGUser(this.editUser.id, this.editUser).subscribe(() => {\n        this.loadPGUsers(); // Refresh the list after updating\n        this.editUser = null; // Clear editing form\n      });\n    }\n  }\n\n  deletePGUser(id) {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after deleting\n    });\n  }\n  static #_ = this.ɵfac = function PgUserComponent_Factory(t) {\n    return new (t || PgUserComponent)(i0.ɵɵdirectiveInject(i1.PgUserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PgUserComponent,\n    selectors: [[\"app-pg-user\"]],\n    decls: 72,\n    vars: 4,\n    consts: [[1, \"pagetitle\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"href\", \"index.html\"], [1, \"breadcrumb-item\", \"active\"], [1, \"section\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#addEditPGUserModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\", \"datatable\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"addEditPGUserModal\", \"tabindex\", \"-1\", \"data-bs-backdrop\", \"false\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"ext\"], [\"type\", \"text\", \"id\", \"ext\", \"formControlName\", \"ext\", 1, \"form-control\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"completion\"], [\"type\", \"date\", \"id\", \"completion\", \"formControlName\", \"completion\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [3, \"click\"]],\n    template: function PgUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"PG Users Tables\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"nav\")(4, \"ol\", 1)(5, \"li\", 2)(6, \"a\", 3);\n        i0.ɵɵtext(7, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\", 2);\n        i0.ɵɵtext(9, \"PG Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"li\", 4);\n        i0.ɵɵtext(11, \"PG Users Tables\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"section\", 5)(13, \"div\", 6)(14, \"div\", 7)(15, \"div\", 8)(16, \"div\", 9)(17, \"h5\", 10);\n        i0.ɵɵtext(18, \" Datatables \");\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function PgUserComponent_Template_button_click_19_listener() {\n          return ctx.openAddEditPGUserModal();\n        });\n        i0.ɵɵtext(20, \"Add PG User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"table\", 12)(22, \"thead\")(23, \"tr\")(24, \"th\");\n        i0.ɵɵtext(25, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Ext.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Completion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tbody\");\n        i0.ɵɵtemplate(37, PgUserComponent_tr_37_Template, 16, 5, \"tr\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(38, \"div\", 14)(39, \"div\", 15)(40, \"div\", 16)(41, \"div\", 17)(42, \"h5\", 18);\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"button\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 20)(46, \"form\", 21);\n        i0.ɵɵlistener(\"ngSubmit\", function PgUserComponent_Template_form_ngSubmit_46_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(47, \"div\", 22)(48, \"label\", 23);\n        i0.ɵɵtext(49, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 22)(52, \"label\", 25);\n        i0.ɵɵtext(53, \"Ext\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 22)(56, \"label\", 27);\n        i0.ɵɵtext(57, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"input\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 22)(60, \"label\", 29);\n        i0.ɵɵtext(61, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(62, \"input\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 22)(64, \"label\", 31);\n        i0.ɵɵtext(65, \"Completion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(66, \"input\", 32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"button\", 33);\n        i0.ɵɵtext(68);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(69, \"div\", 34)(70, \"button\", 35);\n        i0.ɵɵtext(71, \"Close\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(37);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pgUsers);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit PG User\" : \"Add PG User\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.pgUserForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update\" : \"Add\");\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","PgUserComponent","constructor","pgUserService","ngOnInit","loadPGUsers","openAddEditPGUserModal","getPGUsers","subscribe","data","pgUsers","createPGUser","newUser","editPGUser","user","editUser","updatePGUser","id","deletePGUser","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.html","D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.ts"],"sourcesContent":["<div class=\"pagetitle\">\n  <h1>PG Users Tables</h1>\n  <nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\n      <li class=\"breadcrumb-item\">PG Users</li>\n      <li class=\"breadcrumb-item active\">PG Users Tables</li>\n    </ol>\n  </nav>\n</div>\n\n<section class=\"section\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            Datatables\n            <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addEditPGUserModal\" (click)=\"openAddEditPGUserModal()\">Add PG User</button>\n          </h5>\n\n          <!-- Table displaying PG Users -->\n          <table class=\"table datatable\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Ext.</th>\n                <th>City</th>\n                <th>Start Date</th>\n                <th>Completion</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let user of pgUsers\">\n                <td>{{ user.name }}</td>\n                <td>{{ user.ext }}</td>\n                <td>{{ user.city }}</td>\n                <td>{{ user.startDate }}</td>\n                <td>{{ user.completion }}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addEditPGUserModal\" (click)=\"openAddEditPGUserModal(user)\">Edit</button>\n                  <button (click)=\"deletePGUser(user.id)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Modal for Adding/Editing PG User -->\n<div class=\"modal fade\" id=\"addEditPGUserModal\" tabindex=\"-1\" data-bs-backdrop=\"false\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{ isEditMode ? 'Edit PG User' : 'Add PG User' }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"pgUserForm\" (ngSubmit)=\"onSubmit()\">\n          <!-- Form fields here -->\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"ext\">Ext</label>\n            <input type=\"text\" id=\"ext\" formControlName=\"ext\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"city\">City</label>\n            <input type=\"text\" id=\"city\" formControlName=\"city\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"startDate\">Start Date</label>\n            <input type=\"date\" id=\"startDate\" formControlName=\"startDate\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"completion\">Completion</label>\n            <input type=\"date\" id=\"completion\" formControlName=\"completion\" class=\"form-control\" />\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">{{ isEditMode ? 'Update' : 'Add' }}</button>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PgUserService } from 'src/app/services/pg-user/pg-user.service';\n@Component({\n  selector: 'app-pg-user',\n  templateUrl: './pg-user.component.html',\n  styleUrls: ['./pg-user.component.css']\n})\nexport class PgUserComponent implements OnInit  {\n  pgUsers: any[] = [];\n  newUser: any = {}; // Initialize with appropriate structure\n  editUser: any = null; // Store the user being edited\n\n  constructor(private pgUserService: PgUserService) {}\n\n  ngOnInit(): void {\n    this.loadPGUsers();\n  }\n\n  openAddEditPGUserModal(){\n\n  }\n\n  loadPGUsers(): void {\n    this.pgUserService.getPGUsers().subscribe(data => {\n      this.pgUsers = data;\n    });\n  }\n\n  createPGUser(): void {\n    this.pgUserService.createPGUser(this.newUser).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after creating\n      this.newUser = {}; // Reset form\n    });\n  }\n\n  editPGUser(user: any): void {\n    this.editUser = { ...user }; // Clone user data for editing\n  }\n\n  updatePGUser(): void {\n    if (this.editUser) {\n      this.pgUserService.updatePGUser(this.editUser.id, this.editUser).subscribe(() => {\n        this.loadPGUsers(); // Refresh the list after updating\n        this.editUser = null; // Clear editing form\n      });\n    }\n  }\n\n  deletePGUser(id: number): void {\n    this.pgUserService.deletePGUser(id).subscribe(() => {\n      this.loadPGUsers(); // Refresh the list after deleting\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}