{"ast":null,"code":"import { AddRoomComponent } from './add-room/add-room.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/room/room.service\";\nexport class RoomsComponent {\n  constructor(roomService) {\n    this.roomService = roomService;\n    this.rooms = [];\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.loadRooms();\n  }\n  loadRooms() {\n    this.roomService.getRooms().subscribe(rooms => {\n      this.rooms = rooms;\n    });\n  }\n  openAddRoomModal() {\n    this.isEditMode = false;\n    this.selectedRoom = null;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  openEditRoomModal(room) {\n    this.isEditMode = true;\n    this.selectedRoom = room;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  deleteRoom(id) {\n    this.roomService.deleteRoom(id).subscribe(() => {\n      this.loadRooms();\n    });\n  }\n  onRoomUpdated() {\n    this.loadRooms();\n  }\n  static #_ = this.ɵfac = function RoomsComponent_Factory(t) {\n    return new (t || RoomsComponent)(i0.ɵɵdirectiveInject(i1.RoomService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoomsComponent,\n    selectors: [[\"app-rooms\"]],\n    viewQuery: function RoomsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(AddRoomComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addEditRoomModal = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function RoomsComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,gBAAgB,QAAQ,+BAA+B;;;AAUhE,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,UAAK,GAAU,EAAE;IAEjB,eAAU,GAAY,KAAK;EAIoB;EAE/CC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC9C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,gBAAgB;IACd,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAChE,MAAMC,KAAK,GAAG,IAAIC,SAAS,CAACC,KAAK,CAACL,YAAY,CAAC;IAC/CG,KAAK,CAACG,IAAI,EAAE;EACd;EAEAC,iBAAiB,CAACC,IAAS;IACzB,IAAI,CAACV,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,YAAY,GAAGS,IAAI;IACxB,MAAMR,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAChE,MAAMC,KAAK,GAAG,IAAIC,SAAS,CAACC,KAAK,CAACL,YAAY,CAAC;IAC/CG,KAAK,CAACG,IAAI,EAAE;EACd;EAEAG,UAAU,CAACC,EAAU;IACnB,IAAI,CAACnB,WAAW,CAACkB,UAAU,CAACC,EAAE,CAAC,CAACf,SAAS,CAAC,MAAK;MAC7C,IAAI,CAACF,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;EAEAkB,aAAa;IACX,IAAI,CAAClB,SAAS,EAAE;EAClB;EAAC;qBA5CUJ,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAuB;IAAAC;MAAA;uBAMdzB,gBAAgB","names":["AddRoomComponent","RoomsComponent","constructor","roomService","ngOnInit","loadRooms","getRooms","subscribe","rooms","openAddRoomModal","isEditMode","selectedRoom","modalElement","document","getElementById","modal","bootstrap","Modal","show","openEditRoomModal","room","deleteRoom","id","onRoomUpdated","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\rooms\\rooms.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RoomService } from 'src/app/services/room/room.service';\nimport { AddRoomComponent } from './add-room/add-room.component';\n\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent {\n\n  rooms: any[] = [];\n  selectedRoom: any;\n  isEditMode: boolean = false;\n\n  @ViewChild(AddRoomComponent) addEditRoomModal!: AddRoomComponent;\n\n  constructor(private roomService: RoomService) {}\n\n  ngOnInit(): void {\n    this.loadRooms();\n  }\n\n  loadRooms() {\n    this.roomService.getRooms().subscribe((rooms) => {\n      this.rooms = rooms;\n    });\n  }\n\n  openAddRoomModal() {\n    this.isEditMode = false;\n    this.selectedRoom = null;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  openEditRoomModal(room: any) {\n    this.isEditMode = true;\n    this.selectedRoom = room;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  deleteRoom(id: number) {\n    this.roomService.deleteRoom(id).subscribe(() => {\n      this.loadRooms();\n    });\n  }\n\n  onRoomUpdated() {\n    this.loadRooms();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}