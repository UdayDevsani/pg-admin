{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this._isLoggedIn = false;\n  }\n  initialize() {\n    const loggedIn = localStorage.getItem('isLoggedIn');\n    this._isLoggedIn = loggedIn === 'true';\n  }\n  login(username, password) {\n    if (username === 'admin' && password === 'admin') {\n      this._isLoggedIn = true;\n      localStorage.setItem('isLoggedIn', 'true');\n      return true;\n    }\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    return false;\n  }\n  logout() {\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n  isLoggedIn() {\n    return this._isLoggedIn;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAFlB,gBAAW,GAAG,KAAK;EAEU;EAErCC,UAAU;IACR,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACnD,IAAI,CAACC,WAAW,GAAGH,QAAQ,KAAK,MAAM;EACxC;EAEAI,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,IAAI,CAACH,WAAW,GAAG,IAAI;MACvBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;MAC1C,OAAO,IAAI;;IAEb,IAAI,CAACJ,WAAW,GAAG,KAAK;IACxBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;IAC3C,OAAO,KAAK;EACd;EAEAC,MAAM;IACJ,IAAI,CAACL,WAAW,GAAG,KAAK;IACxBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;IAC3CN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,UAAU;IACR,OAAO,IAAI,CAACR,WAAW;EACzB;EAAC;qBA/BUP,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAgB,SAAXhB,WAAW;IAAAiB,YAFV;EAAM","names":["AuthService","constructor","router","initialize","loggedIn","localStorage","getItem","_isLoggedIn","login","username","password","setItem","logout","removeItem","navigate","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _isLoggedIn = false;\n\n  constructor(private router: Router) {}\n\n  initialize() {\n    const loggedIn = localStorage.getItem('isLoggedIn');\n    this._isLoggedIn = loggedIn === 'true';\n  }\n\n  login(username: string, password: string): boolean {\n    if (username === 'admin' && password === 'admin') {\n      this._isLoggedIn = true;\n      localStorage.setItem('isLoggedIn', 'true');\n      return true;\n    }\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    return false;\n  }\n\n  logout(): void {\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}