{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PaymentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5000/api/payments';\n  }\n  getPayments() {\n    return this.http.get(this.baseUrl);\n  }\n  createPayment(payment) {\n    return this.http.post(this.baseUrl, payment);\n  }\n  updatePayment(payment) {\n    return this.http.put(this.baseUrl, payment);\n  }\n  deletePayment(payment_id) {\n    return this.http.delete(`${this.baseUrl}/${payment_id}`);\n  }\n  static #_ = this.ɵfac = function PaymentService_Factory(t) {\n    return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaymentService,\n    factory: PaymentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,oCAAoC;EAEf;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,OAAO,CAAC;EACzC;EAEAC,aAAa,CAACC,OAAY;IACxB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACH,OAAO,EAAEE,OAAO,CAAC;EACnD;EAEAE,aAAa,CAACF,OAAY;IACxB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACL,OAAO,EAAEE,OAAO,CAAC;EAClD;EAEAI,aAAa,CAACC,UAAkB;IAC9B,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACR,OAAO,IAAIO,UAAU,EAAE,CAAC;EAC/D;EAAC;qBAnBUZ,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAc,SAAdd,cAAc;IAAAe,YAFb;EAAM","names":["PaymentService","constructor","http","getPayments","get","baseUrl","createPayment","payment","post","updatePayment","put","deletePayment","payment_id","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\services\\payment\\payment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n  private baseUrl = 'http://localhost:5000/api/payments';\n\n  constructor(private http: HttpClient) {}\n\n  getPayments(): Observable<any> {\n    return this.http.get<any>(this.baseUrl);\n  }\n\n  createPayment(payment: any): Observable<any> {\n    return this.http.post<any>(this.baseUrl, payment);\n  }\n\n  updatePayment(payment: any): Observable<any> {\n    return this.http.put<any>(this.baseUrl, payment);\n  }\n\n  deletePayment(payment_id: number): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/${payment_id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}