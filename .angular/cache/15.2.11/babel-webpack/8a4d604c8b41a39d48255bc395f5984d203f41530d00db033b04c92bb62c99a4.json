{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddUserComponent = class AddUserComponent {\n  constructor(fb, pgUserService) {\n    this.fb = fb;\n    this.pgUserService = pgUserService;\n    this.isEditMode = false;\n    this.pgUserUpdated = new EventEmitter();\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n};\n__decorate([Input()], AddUserComponent.prototype, \"pgUser\", void 0);\n__decorate([Input()], AddUserComponent.prototype, \"isEditMode\", void 0);\n__decorate([Output()], AddUserComponent.prototype, \"pgUserUpdated\", void 0);\nAddUserComponent = __decorate([Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})], AddUserComponent);\nexport { AddUserComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAC9E,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YAAoBC,EAAe,EAAUC,aAA4B;IAArD,OAAE,GAAFD,EAAE;IAAuB,kBAAa,GAAbC,aAAa;IALjD,eAAU,GAAY,KAAK;IAC1B,kBAAa,GAAuB,IAAIL,YAAY,EAAQ;IAKpE,IAAI,CAACM,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,GAAG,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MAC9BE,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAC/BG,SAAS,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MACpCI,UAAU,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ;KACrC,CAAC;EACJ;EAEAK,QAAQ;IACN,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,MAAM,EAAE;MAClC,IAAI,CAACV,UAAU,CAACW,UAAU,CAAC,IAAI,CAACD,MAAM,CAAC;;EAE3C;EAEAE,UAAU;IACR,IAAI,IAAI,CAACZ,UAAU,CAACa,KAAK,EAAE;MACzB,IAAI,IAAI,CAACJ,UAAU,EAAE;QACnB,IAAI,CAACV,aAAa,CAACe,YAAY,CAAC,IAAI,CAACJ,MAAM,CAACK,EAAE,EAAE,IAAI,CAACf,UAAU,CAACgB,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;UACpF,IAAI,CAACC,aAAa,CAACC,IAAI,EAAE;UACzB,IAAI,CAACC,UAAU,EAAE;QACnB,CAAC,CAAC;OACH,MAAM;QACL,IAAI,CAACrB,aAAa,CAACsB,YAAY,CAAC,IAAI,CAACrB,UAAU,CAACgB,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;UACpE,IAAI,CAACC,aAAa,CAACC,IAAI,EAAE;UACzB,IAAI,CAACC,UAAU,EAAE;QACnB,CAAC,CAAC;;;EAGR;EAEAA,UAAU;IACR,MAAME,KAAK,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,CAAC;IACxFL,KAAK,CAACM,IAAI,EAAE;EACd;CACD;AA1CUC,YAARrC,KAAK,EAAE,gDAAa;AACZqC,YAARrC,KAAK,EAAE,oDAA6B;AAC3BqC,YAATpC,MAAM,EAAE,uDAA8D;AAH5DG,gBAAgB,eAL5BL,SAAS,CAAC;EACTuC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWpC,gBAAgB,CA2C5B;SA3CYA,gBAAgB","names":["Component","Input","Output","EventEmitter","Validators","AddUserComponent","constructor","fb","pgUserService","pgUserForm","group","name","required","ext","city","startDate","completion","ngOnInit","isEditMode","pgUser","patchValue","savePGUser","valid","updatePGUser","id","value","subscribe","pgUserUpdated","emit","closeModal","createPGUser","modal","bootstrap","Modal","getInstance","document","getElementById","hide","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\add-user\\add-user.component.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PgUserService } from '../../../services/';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  @Input() pgUser: any;\n  @Input() isEditMode: boolean = false;\n  @Output() pgUserUpdated: EventEmitter<void> = new EventEmitter<void>();\n\n  pgUserForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private pgUserService: PgUserService) {\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}