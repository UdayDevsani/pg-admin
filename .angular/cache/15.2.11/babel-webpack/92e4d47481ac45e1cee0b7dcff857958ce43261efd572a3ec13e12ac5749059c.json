{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/pg-user/pg-user.service\";\nimport * as i3 from \"@angular/common\";\nfunction AddUserComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter the full name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter a valid phone number. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter the address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter a valid room ID. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Please enter a valid booking ID. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddUserComponent {\n  constructor(fb, pgUserService) {\n    this.fb = fb;\n    this.pgUserService = pgUserService;\n    this.isEditMode = false;\n    this.pgUserUpdated = new EventEmitter();\n    this.pgUserForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', Validators.required],\n      address: ['', Validators.required],\n      roomId: ['', Validators.required],\n      bookingId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PgUserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user\"]],\n    inputs: {\n      pgUser: \"pgUser\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      pgUserUpdated: \"pgUserUpdated\"\n    },\n    decls: 44,\n    vars: 10,\n    consts: [[\"id\", \"addEditPGUserModal\", \"tabindex\", \"-1\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"fullName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"fullName\", \"formControlName\", \"fullName\", 1, \"form-control\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phoneNumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"roomId\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"roomId\", \"formControlName\", \"roomId\", 1, \"form-control\"], [\"for\", \"bookingId\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"bookingId\", \"formControlName\", \"bookingId\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"invalid-feedback\", \"d-block\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7)(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵtemplate(13, AddUserComponent_div_13_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵtemplate(18, AddUserComponent_div_18_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 15);\n        i0.ɵɵtemplate(23, AddUserComponent_div_23_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 16);\n        i0.ɵɵtext(26, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"textarea\", 17);\n        i0.ɵɵtemplate(28, AddUserComponent_div_28_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 8)(30, \"label\", 18);\n        i0.ɵɵtext(31, \"Room ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 19);\n        i0.ɵɵtemplate(33, AddUserComponent_div_33_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 8)(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Booking ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 21);\n        i0.ɵɵtemplate(38, AddUserComponent_div_38_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 22)(40, \"button\", 23);\n        i0.ɵɵtext(41, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function AddUserComponent_Template_button_click_42_listener() {\n          return ctx.savePGUser();\n        });\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit PG User\" : \"Add PG User\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.pgUserForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.pgUserForm.get(\"fullName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.pgUserForm.get(\"fullName\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.pgUserForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.pgUserForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.pgUserForm.get(\"phoneNumber\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.pgUserForm.get(\"phoneNumber\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.pgUserForm.get(\"address\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.pgUserForm.get(\"address\")) == null ? null : tmp_5_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.pgUserForm.get(\"roomId\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.pgUserForm.get(\"roomId\")) == null ? null : tmp_6_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.pgUserForm.get(\"bookingId\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.pgUserForm.get(\"bookingId\")) == null ? null : tmp_7_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.pgUserForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Save changes\" : \"Add User\", \" \");\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","i0","AddUserComponent","constructor","fb","pgUserService","pgUserForm","group","fullName","required","email","phoneNumber","address","roomId","bookingId","ngOnInit","isEditMode","pgUser","patchValue","savePGUser","valid","updatePGUser","id","value","subscribe","pgUserUpdated","emit","closeModal","createPGUser","modal","bootstrap","Modal","getInstance","document","getElementById","hide","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\add-user\\add-user.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\add-user\\add-user.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PgUserService } from 'src/app/services/pg-user/pg-user.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  @Input() pgUser: any;\n  @Input() isEditMode: boolean = false;\n  @Output() pgUserUpdated: EventEmitter<void> = new EventEmitter<void>();\n\n  pgUserForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private pgUserService: PgUserService) {\n    this.pgUserForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', Validators.required],\n      address: ['', Validators.required],\n      roomId: ['', Validators.required],\n      bookingId: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.isEditMode && this.pgUser) {\n      this.pgUserForm.patchValue(this.pgUser);\n    }\n  }\n\n  savePGUser() {\n    if (this.pgUserForm.valid) {\n      if (this.isEditMode) {\n        this.pgUserService.updatePGUser(this.pgUser.id, this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      } else {\n        this.pgUserService.createPGUser(this.pgUserForm.value).subscribe(() => {\n          this.pgUserUpdated.emit();\n          this.closeModal();\n        });\n      }\n    }\n  }\n\n  closeModal() {\n    const modal = bootstrap.Modal.getInstance(document.getElementById('addEditPGUserModal'));\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditPGUserModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{isEditMode ? 'Edit PG User' : 'Add PG User'}}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"pgUserForm\">\n          <div class=\"mb-3\">\n            <label for=\"fullName\" class=\"form-label\">Full Name</label>\n            <input type=\"text\" id=\"fullName\" class=\"form-control\" formControlName=\"fullName\">\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('fullName')?.invalid && pgUserForm.get('fullName')?.touched\">\n              Please enter the full name.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\">\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('email')?.invalid && pgUserForm.get('email')?.touched\">\n              Please enter a valid email address.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"phoneNumber\" class=\"form-label\">Phone Number</label>\n            <input type=\"text\" id=\"phoneNumber\" class=\"form-control\" formControlName=\"phoneNumber\">\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('phoneNumber')?.invalid && pgUserForm.get('phoneNumber')?.touched\">\n              Please enter a valid phone number.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"address\" class=\"form-label\">Address</label>\n            <textarea id=\"address\" class=\"form-control\" formControlName=\"address\"></textarea>\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('address')?.invalid && pgUserForm.get('address')?.touched\">\n              Please enter the address.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"roomId\" class=\"form-label\">Room ID</label>\n            <input type=\"number\" id=\"roomId\" class=\"form-control\" formControlName=\"roomId\">\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('roomId')?.invalid && pgUserForm.get('roomId')?.touched\">\n              Please enter a valid room ID.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"bookingId\" class=\"form-label\">Booking ID</label>\n            <input type=\"number\" id=\"bookingId\" class=\"form-control\" formControlName=\"bookingId\">\n            <div class=\"invalid-feedback d-block\" *ngIf=\"pgUserForm.get('bookingId')?.invalid && pgUserForm.get('bookingId')?.touched\">\n              Please enter a valid booking ID.\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"savePGUser()\" [disabled]=\"pgUserForm.invalid\">\n          {{isEditMode ? 'Save changes' : 'Add User'}}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}