{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this._isLoggedIn = false;\n  }\n  init() {\n    const loggedIn = localStorage.getItem('isLoggedIn');\n    this._isLoggedIn = loggedIn === 'true';\n  }\n  login(username, password) {\n    if (username === 'admin' && password === 'admin') {\n      this._isLoggedIn = true;\n      localStorage.setItem('isLoggedIn', 'true');\n      return true;\n    }\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    return false;\n  }\n  logout() {\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n  }\n  isLoggedIn() {\n    return this._isLoggedIn;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC;IAIU,gBAAW,GAAG,KAAK;;EAE3BC,IAAI;IACF,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACnD,IAAI,CAACC,WAAW,GAAGH,QAAQ,KAAK,MAAM;EACxC;EAEAI,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,IAAI,CAACH,WAAW,GAAG,IAAI;MACvBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;MAC1C,OAAO,IAAI;;IAEb,IAAI,CAACJ,WAAW,GAAG,KAAK;IACxBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;IAC3C,OAAO,KAAK;EACd;EAEAC,MAAM;IACJ,IAAI,CAACL,WAAW,GAAG,KAAK;IACxBF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;EAC7C;EAEAE,UAAU;IACR,OAAO,IAAI,CAACN,WAAW;EACzB;EAAC;qBA1BUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAa,SAAXb,WAAW;IAAAc,YAFV;EAAM","names":["AuthService","constructor","init","loggedIn","localStorage","getItem","_isLoggedIn","login","username","password","setItem","logout","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _isLoggedIn = false;\n\n  init() {\n    const loggedIn = localStorage.getItem('isLoggedIn');\n    this._isLoggedIn = loggedIn === 'true';\n  }\n\n  login(username: string, password: string): boolean {\n    if (username === 'admin' && password === 'admin') {\n      this._isLoggedIn = true;\n      localStorage.setItem('isLoggedIn', 'true');\n      return true;\n    }\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n    return false;\n  }\n\n  logout(): void {\n    this._isLoggedIn = false;\n    localStorage.setItem('isLoggedIn', 'false');\n  }\n\n  isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}