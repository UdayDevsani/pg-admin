{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet PgUsersComponent = class PgUsersComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.pgUsers = [\n      // Your initial data here\n    ];\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n  openAddEditPGUserModal(user) {\n    if (user) {\n      this.isEditMode = true;\n      this.pgUserForm.patchValue(user);\n    } else {\n      this.isEditMode = false;\n      this.pgUserForm.reset();\n    }\n  }\n  onSubmit() {\n    if (this.pgUserForm.valid) {\n      const userData = this.pgUserForm.value;\n      if (this.isEditMode) {\n        // Update the user\n        const index = this.pgUsers.findIndex(u => u.id === userData.id);\n        this.pgUsers[index] = userData;\n      } else {\n        // Add a new user\n        this.pgUsers.push(userData);\n      }\n      // Close the modal\n      const modal = document.getElementById('addEditPGUserModal');\n      if (modal) {\n        const bootstrapModal = bootstrap.Modal.getInstance(modal);\n        bootstrapModal.hide();\n      }\n    }\n  }\n  deletePGUser(userId) {\n    this.pgUsers = this.pgUsers.filter(user => user.id !== userId);\n  }\n};\nPgUsersComponent = __decorate([Component({\n  selector: 'app-pg-users',\n  templateUrl: './pg-users.component.html',\n  styleUrls: ['./pg-users.component.css']\n})], PgUsersComponent);\nexport { PgUsersComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IANtB,YAAO,GAAG;MACR;IAAA,CACD;IAED,eAAU,GAAY,KAAK;EAEW;EAEtCC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,GAAG,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MAC9BE,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAC/BG,SAAS,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MACpCI,UAAU,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ;KACrC,CAAC;EACJ;EAEAK,sBAAsB,CAACC,IAAU;IAC/B,IAAIA,IAAI,EAAE;MACR,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACV,UAAU,CAACW,UAAU,CAACF,IAAI,CAAC;KACjC,MAAM;MACL,IAAI,CAACC,UAAU,GAAG,KAAK;MACvB,IAAI,CAACV,UAAU,CAACY,KAAK,EAAE;;EAE3B;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACb,UAAU,CAACc,KAAK,EAAE;MACzB,MAAMC,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACgB,KAAK;MACtC,IAAI,IAAI,CAACN,UAAU,EAAE;QACnB;QACA,MAAMO,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,QAAQ,CAACM,EAAE,CAAC;QAC/D,IAAI,CAACH,OAAO,CAACD,KAAK,CAAC,GAAGF,QAAQ;OAC/B,MAAM;QACL;QACA,IAAI,CAACG,OAAO,CAACI,IAAI,CAACP,QAAQ,CAAC;;MAE7B;MACA,MAAMQ,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;MAC3D,IAAIF,KAAK,EAAE;QACT,MAAMG,cAAc,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACN,KAAK,CAAC;QACzDG,cAAc,CAACI,IAAI,EAAE;;;EAG3B;EAEAC,YAAY,CAACC,MAAc;IACzB,IAAI,CAACd,OAAO,GAAG,IAAI,CAACA,OAAO,CAACe,MAAM,CAACxB,IAAI,IAAIA,IAAI,CAACY,EAAE,KAAKW,MAAM,CAAC;EAChE;CACD;AApDYpC,gBAAgB,eAL5BF,SAAS,CAAC;EACTwC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWxC,gBAAgB,CAoD5B;SApDYA,gBAAgB","names":["Component","Validators","PgUsersComponent","constructor","fb","ngOnInit","pgUserForm","group","name","required","ext","city","startDate","completion","openAddEditPGUserModal","user","isEditMode","patchValue","reset","onSubmit","valid","userData","value","index","pgUsers","findIndex","u","id","push","modal","document","getElementById","bootstrapModal","bootstrap","Modal","getInstance","hide","deletePGUser","userId","filter","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\pg-user\\pg-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pg-users',\n  templateUrl: './pg-users.component.html',\n  styleUrls: ['./pg-users.component.css']\n})\nexport class PgUsersComponent implements OnInit {\n  pgUsers = [\n    // Your initial data here\n  ];\n  pgUserForm: FormGroup;\n  isEditMode: boolean = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.pgUserForm = this.fb.group({\n      name: ['', Validators.required],\n      ext: ['', Validators.required],\n      city: ['', Validators.required],\n      startDate: ['', Validators.required],\n      completion: ['', Validators.required]\n    });\n  }\n\n  openAddEditPGUserModal(user?: any): void {\n    if (user) {\n      this.isEditMode = true;\n      this.pgUserForm.patchValue(user);\n    } else {\n      this.isEditMode = false;\n      this.pgUserForm.reset();\n    }\n  }\n\n  onSubmit(): void {\n    if (this.pgUserForm.valid) {\n      const userData = this.pgUserForm.value;\n      if (this.isEditMode) {\n        // Update the user\n        const index = this.pgUsers.findIndex(u => u.id === userData.id);\n        this.pgUsers[index] = userData;\n      } else {\n        // Add a new user\n        this.pgUsers.push(userData);\n      }\n      // Close the modal\n      const modal = document.getElementById('addEditPGUserModal');\n      if (modal) {\n        const bootstrapModal = bootstrap.Modal.getInstance(modal);\n        bootstrapModal.hide();\n      }\n    }\n  }\n\n  deletePGUser(userId: number): void {\n    this.pgUsers = this.pgUsers.filter(user => user.id !== userId);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}