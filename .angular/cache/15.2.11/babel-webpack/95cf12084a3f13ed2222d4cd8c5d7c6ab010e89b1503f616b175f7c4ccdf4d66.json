{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/booking-rooms/booking-rooms.service\";\nexport class AddBookingComponent {\n  constructor(fb, bookingRoomService) {\n    this.fb = fb;\n    this.bookingRoomService = bookingRoomService;\n    this.isEditMode = false;\n    this.bookingUpdated = new EventEmitter();\n    this.bookingForm = this.fb.group({\n      user_id: [''],\n      room_id: [''],\n      start_date: [''],\n      end_date: [''],\n      status: ['']\n    });\n  }\n  ngOnChanges() {\n    if (this.isEditMode && this.booking) {\n      this.bookingForm.patchValue(this.booking);\n    } else {\n      this.bookingForm.reset();\n    }\n  }\n  onSubmit() {\n    if (this.isEditMode) {\n      this.bookingRoomService.updateBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.bookingRoomService.createBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n  closeModal() {\n    const modalElement = document.getElementById('addEditBookingModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddBookingComponent_Factory(t) {\n    return new (t || AddBookingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BookingRoomsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddBookingComponent,\n    selectors: [[\"app-add-booking\"]],\n    inputs: {\n      booking: \"booking\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      bookingUpdated: \"bookingUpdated\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    template: function AddBookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"add-booking works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;AAWtE,OAAM,MAAOC,mBAAmB;EAQ9BC,YAAoBC,EAAe,EAAUC,kBAAuC;IAAhE,OAAE,GAAFD,EAAE;IAAuB,uBAAkB,GAAlBC,kBAAkB;IALtD,eAAU,GAAY,KAAK;IAC1B,mBAAc,GAAG,IAAIJ,YAAY,EAAQ;IAKjD,IAAI,CAACK,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,OAAO,EAAE;MACnC,IAAI,CAACT,WAAW,CAACU,UAAU,CAAC,IAAI,CAACD,OAAO,CAAC;KAC1C,MAAM;MACL,IAAI,CAACT,WAAW,CAACW,KAAK,EAAE;;EAE5B;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACJ,UAAU,EAAE;MACnB,IAAI,CAACT,kBAAkB,CAACc,aAAa,CAAC,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC3E,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACnB,kBAAkB,CAACoB,aAAa,CAAC,IAAI,CAACnB,WAAW,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC3E,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;;EAEN;EAEAA,UAAU;IACR,MAAME,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;IACnE,MAAMC,KAAK,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACN,YAAY,CAAC;IACvDG,KAAK,CAACI,IAAI,EAAE;EACd;EAAC;qBA5CU/B,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAgC;IAAAC;MAAApB;MAAAD;IAAA;IAAAsB;MAAAd;IAAA;IAAAe;IAAAC;IAAAC;IAAAC;MAAA;QCXhCC,yBAAG;QAAAA,kCAAkB;QAAAA,iBAAI","names":["EventEmitter","AddBookingComponent","constructor","fb","bookingRoomService","bookingForm","group","user_id","room_id","start_date","end_date","status","ngOnChanges","isEditMode","booking","patchValue","reset","onSubmit","updateBooking","value","subscribe","bookingUpdated","emit","closeModal","createBooking","modalElement","document","getElementById","modal","bootstrap","Modal","getInstance","hide","selectors","inputs","outputs","features","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\booking-rooms\\add-booking\\add-booking.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\booking-rooms\\add-booking\\add-booking.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BookingRoomsService } from 'src/app/services/booking-rooms/booking-rooms.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-add-booking',\n  templateUrl: './add-booking.component.html',\n  styleUrls: ['./add-booking.component.css']\n})\nexport class AddBookingComponent {\n\n  @Input() booking: any;\n  @Input() isEditMode: boolean = false;\n  @Output() bookingUpdated = new EventEmitter<void>();\n\n  bookingForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private bookingRoomService: BookingRoomsService) {\n    this.bookingForm = this.fb.group({\n      user_id: [''],\n      room_id: [''],\n      start_date: [''],\n      end_date: [''],\n      status: ['']\n    });\n  }\n\n  ngOnChanges() {\n    if (this.isEditMode && this.booking) {\n      this.bookingForm.patchValue(this.booking);\n    } else {\n      this.bookingForm.reset();\n    }\n  }\n\n  onSubmit() {\n    if (this.isEditMode) {\n      this.bookingRoomService.updateBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.bookingRoomService.createBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('addEditBookingModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n}\n","<p>add-booking works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}