{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  login(username, password) {\n    // Replace with actual authentication logic\n    if (username === 'admin' && password === 'admin') {\n      this.isAuthenticated = true;\n      this.router.navigate(['/dashboard']);\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    this.isAuthenticated = false;\n    this.router.navigate(['/login']);\n  }\n  isLoggedIn() {\n    return this.isAuthenticated;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAFM,oBAAe,GAAG,KAAK;EAElB;EAErCC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,IAAI,CAACC,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpC,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAC,MAAM;IACJ,IAAI,CAACF,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAE,UAAU;IACR,OAAO,IAAI,CAACH,eAAe;EAC7B;EAAC;qBArBUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAU,SAAXV,WAAW;IAAAW,YAFV;EAAM","names":["AuthService","constructor","router","login","username","password","isAuthenticated","navigate","logout","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {private isAuthenticated = false;\n\n  constructor(private router: Router) {}\n\n  login(username: string, password: string): boolean {\n    // Replace with actual authentication logic\n    if (username === 'admin' && password === 'admin') {\n      this.isAuthenticated = true;\n      this.router.navigate(['/dashboard']);\n      return true;\n    }\n    return false;\n  }\n\n  logout(): void {\n    this.isAuthenticated = false;\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn(): boolean {\n    return this.isAuthenticated;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}