{"ast":null,"code":"import { AddRoomComponent } from './add-room/add-room.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/room/room.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./add-room/add-room.component\";\nfunction RoomsComponent_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function RoomsComponent_tr_37_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openEditRoomModal(room_r1));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function RoomsComponent_tr_37_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteRoom(room_r1.room_id));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.room_number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.rent);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.description);\n  }\n}\nexport class RoomsComponent {\n  constructor(roomService) {\n    this.roomService = roomService;\n    this.rooms = [];\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.loadRooms();\n  }\n  loadRooms() {\n    this.roomService.getRooms().subscribe(rooms => {\n      this.rooms = rooms;\n    });\n  }\n  openAddRoomModal() {\n    this.isEditMode = false;\n    this.selectedRoom = null;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  openEditRoomModal(room) {\n    this.isEditMode = true;\n    this.selectedRoom = room;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n  deleteRoom(id) {\n    this.roomService.deleteRoom(id).subscribe(() => {\n      this.loadRooms();\n    });\n  }\n  onRoomUpdated() {\n    this.loadRooms();\n  }\n  static #_ = this.ɵfac = function RoomsComponent_Factory(t) {\n    return new (t || RoomsComponent)(i0.ɵɵdirectiveInject(i1.RoomService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoomsComponent,\n    selectors: [[\"app-rooms\"]],\n    viewQuery: function RoomsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(AddRoomComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addEditRoomModal = _t.first);\n      }\n    },\n    decls: 39,\n    vars: 3,\n    consts: [[1, \"pagetitle\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"href\", \"index.html\"], [1, \"breadcrumb-item\", \"active\"], [1, \"section\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\", \"datatable\"], [4, \"ngFor\", \"ngForOf\"], [3, \"room\", \"isEditMode\", \"roomUpdated\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function RoomsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Rooms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"nav\")(4, \"ol\", 1)(5, \"li\", 2)(6, \"a\", 3);\n        i0.ɵɵtext(7, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\", 2);\n        i0.ɵɵtext(9, \"Rooms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"li\", 4);\n        i0.ɵɵtext(11, \"Rooms Tables\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"section\", 5)(13, \"div\", 6)(14, \"div\", 7)(15, \"div\", 8)(16, \"div\", 9)(17, \"h5\", 10);\n        i0.ɵɵtext(18, \" Room's List \");\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function RoomsComponent_Template_button_click_19_listener() {\n          return ctx.openAddRoomModal();\n        });\n        i0.ɵɵtext(20, \"Add Room\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"table\", 12)(22, \"thead\")(23, \"tr\")(24, \"th\");\n        i0.ɵɵtext(25, \"Room Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Rent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tbody\");\n        i0.ɵɵtemplate(37, RoomsComponent_tr_37_Template, 16, 5, \"tr\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(38, \"app-add-room\", 14);\n        i0.ɵɵlistener(\"roomUpdated\", function RoomsComponent_Template_app_add_room_roomUpdated_38_listener() {\n          return ctx.onRoomUpdated();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(37);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rooms);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"room\", ctx.selectedRoom)(\"isEditMode\", ctx.isEditMode);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.AddRoomComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["AddRoomComponent","i0","RoomsComponent","constructor","roomService","ngOnInit","loadRooms","getRooms","subscribe","rooms","openAddRoomModal","isEditMode","selectedRoom","modalElement","document","getElementById","modal","bootstrap","Modal","show","openEditRoomModal","room","deleteRoom","id","onRoomUpdated","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\rooms\\rooms.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\rooms\\rooms.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RoomService } from 'src/app/services/room/room.service';\nimport { AddRoomComponent } from './add-room/add-room.component';\n\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent {\n\n  rooms: any[] = [];\n  selectedRoom: any;\n  isEditMode: boolean = false;\n\n  @ViewChild(AddRoomComponent) addEditRoomModal!: AddRoomComponent;\n\n  constructor(private roomService: RoomService) {}\n\n  ngOnInit(): void {\n    this.loadRooms();\n  }\n\n  loadRooms() {\n    this.roomService.getRooms().subscribe((rooms) => {\n      this.rooms = rooms;\n    });\n  }\n\n  openAddRoomModal() {\n    this.isEditMode = false;\n    this.selectedRoom = null;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  openEditRoomModal(room: any) {\n    this.isEditMode = true;\n    this.selectedRoom = room;\n    const modalElement = document.getElementById('addEditRoomModal');\n    const modal = new bootstrap.Modal(modalElement);\n    modal.show();\n  }\n\n  deleteRoom(id: number) {\n    this.roomService.deleteRoom(id).subscribe(() => {\n      this.loadRooms();\n    });\n  }\n\n  onRoomUpdated() {\n    this.loadRooms();\n  }\n\n}\n","<div class=\"pagetitle\">\n  <h1>Rooms</h1>\n  <nav>\n    <ol class=\"breadcrumb\">\n      <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\n      <li class=\"breadcrumb-item\">Rooms</li>\n      <li class=\"breadcrumb-item active\">Rooms Tables</li>\n    </ol>\n  </nav>\n</div>\n\n<section class=\"section\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            Room's List\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openAddRoomModal()\">Add Room</button>\n          </h5>\n\n          <!-- Table displaying Rooms -->\n          <table class=\"table datatable\">\n            <thead>\n              <tr>\n                <th>Room Number</th>\n                <th>Type</th>\n                <th>Rent</th>\n                <th>Status</th>\n                <th>Description</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let room of rooms\">\n                <td>{{ room.room_number }}</td>\n                <td>{{ room.type }}</td>\n                <td>{{ room.rent }}</td>\n                <td>{{ room.status }}</td>\n                <td>{{ room.description }}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"openEditRoomModal(room)\">Edit</button>\n                  <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteRoom(room.room_id)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Modal for Adding/Editing Room -->\n<app-add-room\n  [room]=\"selectedRoom\"\n  [isEditMode]=\"isEditMode\"\n  (roomUpdated)=\"onRoomUpdated()\">\n</app-add-room>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}