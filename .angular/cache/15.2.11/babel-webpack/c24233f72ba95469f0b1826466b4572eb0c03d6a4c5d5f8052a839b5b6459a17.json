{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RoomService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/rooms';\n  }\n  getRooms() {\n    return this.http.get(this.apiUrl);\n  }\n  createRoom(room) {\n    return this.http.post(this.apiUrl, room);\n  }\n  updateRoom(room) {\n    return this.http.put(this.apiUrl, room);\n  }\n  deleteRoom(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function RoomService_Factory(t) {\n    return new (t || RoomService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoomService,\n    factory: RoomService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEX;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EAEAC,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAC/C;EAEAE,UAAU,CAACF,IAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACL,MAAM,EAAEE,IAAI,CAAC;EAC9C;EAEAI,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,CAAC;EACtD;EAAC;qBAnBUZ,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAc,SAAXd,WAAW;IAAAe,YAFV;EAAM","names":["RoomService","constructor","http","getRooms","get","apiUrl","createRoom","room","post","updateRoom","put","deleteRoom","id","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\services\\room\\room.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n  private apiUrl = 'http://localhost:5000/api/rooms';\n\n  constructor(private http: HttpClient) {}\n\n  getRooms(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  createRoom(room: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl, room);\n  }\n\n  updateRoom(room: any): Observable<any> {\n    return this.http.put<any>(this.apiUrl, room);\n  }\n\n  deleteRoom(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}