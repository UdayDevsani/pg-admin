{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as echarts from 'echarts';\nlet DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.totalRooms = 50;\n    this.bookedRooms = 30;\n    this.availableRooms = 20;\n    this.totalGuests = 45;\n    this.newBookings = 5;\n    this.pendingInquiries = 2;\n    this.revenue = [2000, 7000, 8000, 10000];\n    this.recentBookings = [{\n      details: 'Booking 1 details'\n    }, {\n      details: 'Booking 2 details'\n    }];\n    this.upcomingActivities = [{\n      details: 'Activity 1 details'\n    }, {\n      details: 'Activity 2 details'\n    }];\n    this.isDropdownOpen = false;\n    this.cards = [{\n      title: 'Total Rooms',\n      value: this.totalRooms\n    }, {\n      title: 'Booked Rooms',\n      value: this.bookedRooms\n    }, {\n      title: 'Available Rooms',\n      value: this.availableRooms\n    }, {\n      title: 'Total Guests',\n      value: this.totalGuests\n    }, {\n      title: 'New Bookings',\n      value: this.newBookings\n    }, {\n      title: 'Pending Inquiries',\n      value: this.pendingInquiries\n    }, {\n      title: 'Revenue',\n      value: this.revenue\n    }];\n    this.quickActions = [{\n      label: 'Book a Room',\n      link: '/book'\n    }, {\n      label: 'View Rooms',\n      link: '/rooms'\n    }, {\n      label: 'Add New Room',\n      link: '/add-room'\n    }, {\n      label: 'Manage Guests',\n      link: '/manage-guests'\n    }, {\n      label: 'Send Notifications',\n      link: '/send-notifications'\n    }];\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.initRoomsChart();\n    this.initRevenueChart();\n    // this.initReportsChart();\n  }\n\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n  initRoomsChart() {\n    const roomsChart = echarts.init(document.getElementById('roomsChart'));\n    const roomsOption = {\n      title: {\n        text: 'Rooms Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Rooms']\n      },\n      xAxis: {\n        data: ['Total Rooms', 'Booked Rooms', 'Available Rooms']\n      },\n      yAxis: {},\n      series: [{\n        name: 'Rooms',\n        type: 'bar',\n        data: [this.totalRooms, this.bookedRooms, this.availableRooms]\n      }]\n    };\n    roomsChart.setOption(roomsOption);\n  }\n  initRevenueChart() {\n    const revenueChart = echarts.init(document.getElementById('revenueChart'));\n    const revenueOption = {\n      title: {\n        text: 'Revenue Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Revenue']\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Q1', 'Q2', 'Q3', 'Q4']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Revenue',\n        type: 'scatter',\n        smooth: true,\n        data: this.revenue\n      }]\n    };\n    revenueChart.setOption(revenueOption);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","echarts","DashboardComponent","constructor","details","title","value","totalRooms","bookedRooms","availableRooms","totalGuests","newBookings","pendingInquiries","revenue","label","link","ngOnInit","ngAfterViewInit","initRoomsChart","initRevenueChart","toggleDropdown","isDropdownOpen","roomsChart","init","document","getElementById","roomsOption","text","tooltip","legend","data","xAxis","yAxis","series","name","type","setOption","revenueChart","revenueOption","smooth","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport * as echarts from 'echarts';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n\n  totalRooms = 50;\n  bookedRooms = 30;\n  availableRooms = 20;\n  totalGuests = 45;\n  newBookings = 5;\n  pendingInquiries = 2;\n  revenue = [2000, 7000, 8000, 10000];\n  recentBookings = [\n    { details: 'Booking 1 details' },\n    { details: 'Booking 2 details' }\n  ];\n  upcomingActivities = [\n    { details: 'Activity 1 details' },\n    { details: 'Activity 2 details' }\n  ];\n\n  isDropdownOpen = false;\n\n  cards = [\n    { title: 'Total Rooms', value: this.totalRooms },\n    { title: 'Booked Rooms', value: this.bookedRooms },\n    { title: 'Available Rooms', value: this.availableRooms },\n    { title: 'Total Guests', value: this.totalGuests },\n    { title: 'New Bookings', value: this.newBookings },\n    { title: 'Pending Inquiries', value: this.pendingInquiries },\n    { title: 'Revenue', value: this.revenue }\n  ];\n\n  quickActions = [\n    { label: 'Book a Room', link: '/book' },\n    { label: 'View Rooms', link: '/rooms' },\n    { label: 'Add New Room', link: '/add-room' },\n    { label: 'Manage Guests', link: '/manage-guests' },\n    { label: 'Send Notifications', link: '/send-notifications' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    this.initRoomsChart();\n    this.initRevenueChart();\n    // this.initReportsChart();\n  }\n\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  initRoomsChart() {\n    const roomsChart = echarts.init(document.getElementById('roomsChart') as HTMLDivElement);\n\n    const roomsOption = {\n      title: {\n        text: 'Rooms Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Rooms']\n      },\n      xAxis: {\n        data: ['Total Rooms', 'Booked Rooms', 'Available Rooms']\n      },\n      yAxis: {},\n      series: [{\n        name: 'Rooms',\n        type: 'bar',\n        data: [this.totalRooms, this.bookedRooms, this.availableRooms]\n      }]\n    };\n\n    roomsChart.setOption(roomsOption);\n  }\n\n  initRevenueChart() {\n    const revenueChart = echarts.init(document.getElementById('revenueChart') as HTMLDivElement);\n\n    const revenueOption = {\n      title: {\n        text: 'Revenue Overview'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Revenue']\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Q1', 'Q2', 'Q3', 'Q4']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Revenue',\n        type: 'scatter',\n        smooth: true,\n        data: this.revenue\n      }]\n    };\n\n    revenueChart.setOption(revenueOption);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}