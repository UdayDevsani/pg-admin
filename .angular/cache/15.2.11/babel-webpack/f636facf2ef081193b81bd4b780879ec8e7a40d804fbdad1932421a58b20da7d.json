{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/booking-rooms/booking-rooms.service\";\nexport class AddBookingComponent {\n  constructor(fb, bookingRoomService) {\n    this.fb = fb;\n    this.bookingRoomService = bookingRoomService;\n    this.isEditMode = false;\n    this.bookingUpdated = new EventEmitter();\n    this.bookingForm = this.fb.group({\n      user_id: [''],\n      room_id: [''],\n      start_date: [''],\n      end_date: [''],\n      status: ['']\n    });\n  }\n  ngOnChanges() {\n    if (this.isEditMode && this.booking) {\n      this.bookingForm.patchValue(this.booking);\n    } else {\n      this.bookingForm.reset();\n    }\n  }\n  onSubmit() {\n    if (this.isEditMode) {\n      this.bookingRoomService.updateBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.bookingRoomService.createBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n  closeModal() {\n    const modalElement = document.getElementById('addEditBookingModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n  static #_ = this.ɵfac = function AddBookingComponent_Factory(t) {\n    return new (t || AddBookingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BookingRoomsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddBookingComponent,\n    selectors: [[\"app-add-booking\"]],\n    inputs: {\n      booking: \"booking\",\n      isEditMode: \"isEditMode\"\n    },\n    outputs: {\n      bookingUpdated: \"bookingUpdated\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 37,\n    vars: 3,\n    consts: [[\"id\", \"addEditBookingModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addEditBookingModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"addEditBookingModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"user_id\", 1, \"form-label\"], [\"type\", \"number\", \"formControlName\", \"user_id\", \"id\", \"user_id\", 1, \"form-control\"], [\"for\", \"room_id\", 1, \"form-label\"], [\"type\", \"number\", \"formControlName\", \"room_id\", \"id\", \"room_id\", 1, \"form-control\"], [\"for\", \"start_date\", 1, \"form-label\"], [\"type\", \"date\", \"formControlName\", \"start_date\", \"id\", \"start_date\", 1, \"form-control\"], [\"for\", \"end_date\", 1, \"form-label\"], [\"type\", \"date\", \"formControlName\", \"end_date\", \"id\", \"end_date\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [\"formControlName\", \"status\", \"id\", \"status\", 1, \"form-control\"], [\"value\", \"booked\"], [\"value\", \"canceled\"], [\"value\", \"completed\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddBookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function AddBookingComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Room ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"select\", 18)(29, \"option\", 19);\n        i0.ɵɵtext(30, \"Booked\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 20);\n        i0.ɵɵtext(32, \"Canceled\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 21);\n        i0.ɵɵtext(34, \"Completed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"button\", 22);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Booking\" : \"Add Booking\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookingForm);\n        i0.ɵɵadvance(28);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Add\", \" Booking\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;AAWtE,OAAM,MAAOC,mBAAmB;EAQ9BC,YAAoBC,EAAe,EAAUC,kBAAuC;IAAhE,OAAE,GAAFD,EAAE;IAAuB,uBAAkB,GAAlBC,kBAAkB;IALtD,eAAU,GAAY,KAAK;IAC1B,mBAAc,GAAG,IAAIJ,YAAY,EAAQ;IAKjD,IAAI,CAACK,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,OAAO,EAAE;MACnC,IAAI,CAACT,WAAW,CAACU,UAAU,CAAC,IAAI,CAACD,OAAO,CAAC;KAC1C,MAAM;MACL,IAAI,CAACT,WAAW,CAACW,KAAK,EAAE;;EAE5B;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACJ,UAAU,EAAE;MACnB,IAAI,CAACT,kBAAkB,CAACc,aAAa,CAAC,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC3E,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACnB,kBAAkB,CAACoB,aAAa,CAAC,IAAI,CAACnB,WAAW,CAACc,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC3E,IAAI,CAACC,cAAc,CAACC,IAAI,EAAE;QAC1B,IAAI,CAACC,UAAU,EAAE;MACnB,CAAC,CAAC;;EAEN;EAEAA,UAAU;IACR,MAAME,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;IACnE,MAAMC,KAAK,GAAGC,SAAS,CAACC,KAAK,CAACC,WAAW,CAACN,YAAY,CAAC;IACvDG,KAAK,CAACI,IAAI,EAAE;EACd;EAAC;qBA5CU/B,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAgC;IAAAC;MAAApB;MAAAD;IAAA;IAAAsB;MAAAd;IAAA;IAAAe;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXhCC,8BAA6H;QAI/DA,YAAiD;QAAAA,iBAAK;QAC5GA,4BAA4F;QAC9FA,iBAAM;QACNA,8BAAwB;QACUA;UAAA,OAAYC,cAAU;QAAA,EAAC;QACrDD,8BAAkB;QACwBA,wBAAO;QAAAA,iBAAQ;QACvDA,6BAAiF;QACnFA,iBAAM;QACNA,+BAAkB;QACwBA,wBAAO;QAAAA,iBAAQ;QACvDA,6BAAiF;QACnFA,iBAAM;QACNA,+BAAkB;QAC2BA,2BAAU;QAAAA,iBAAQ;QAC7DA,6BAAqF;QACvFA,iBAAM;QACNA,+BAAkB;QACyBA,yBAAQ;QAAAA,iBAAQ;QACzDA,6BAAiF;QACnFA,iBAAM;QACNA,+BAAkB;QACuBA,uBAAM;QAAAA,iBAAQ;QACrDA,mCAAkE;QACzCA,uBAAM;QAAAA,iBAAS;QACtCA,mCAAyB;QAAAA,yBAAQ;QAAAA,iBAAS;QAC1CA,mCAA0B;QAAAA,0BAAS;QAAAA,iBAAS;QAGhDA,mCAA8C;QAAAA,aAA2C;QAAAA,iBAAS;;;QA7B9CA,eAAiD;QAAjDA,qEAAiD;QAIjGA,eAAyB;QAAzBA,2CAAyB;QAyBiBA,gBAA2C;QAA3CA,wEAA2C","names":["EventEmitter","AddBookingComponent","constructor","fb","bookingRoomService","bookingForm","group","user_id","room_id","start_date","end_date","status","ngOnChanges","isEditMode","booking","patchValue","reset","onSubmit","updateBooking","value","subscribe","bookingUpdated","emit","closeModal","createBooking","modalElement","document","getElementById","modal","bootstrap","Modal","getInstance","hide","selectors","inputs","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\github\\pg-admin\\src\\app\\pages\\booking-rooms\\add-booking\\add-booking.component.ts","D:\\github\\pg-admin\\src\\app\\pages\\booking-rooms\\add-booking\\add-booking.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BookingRoomsService } from 'src/app/services/booking-rooms/booking-rooms.service';\n\ndeclare var bootstrap: any;\n\n@Component({\n  selector: 'app-add-booking',\n  templateUrl: './add-booking.component.html',\n  styleUrls: ['./add-booking.component.css']\n})\nexport class AddBookingComponent {\n\n  @Input() booking: any;\n  @Input() isEditMode: boolean = false;\n  @Output() bookingUpdated = new EventEmitter<void>();\n\n  bookingForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private bookingRoomService: BookingRoomsService) {\n    this.bookingForm = this.fb.group({\n      user_id: [''],\n      room_id: [''],\n      start_date: [''],\n      end_date: [''],\n      status: ['']\n    });\n  }\n\n  ngOnChanges() {\n    if (this.isEditMode && this.booking) {\n      this.bookingForm.patchValue(this.booking);\n    } else {\n      this.bookingForm.reset();\n    }\n  }\n\n  onSubmit() {\n    if (this.isEditMode) {\n      this.bookingRoomService.updateBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    } else {\n      this.bookingRoomService.createBooking(this.bookingForm.value).subscribe(() => {\n        this.bookingUpdated.emit();\n        this.closeModal();\n      });\n    }\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('addEditBookingModal');\n    const modal = bootstrap.Modal.getInstance(modalElement);\n    modal.hide();\n  }\n}\n","<div class=\"modal fade\" id=\"addEditBookingModal\" tabindex=\"-1\" aria-labelledby=\"addEditBookingModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addEditBookingModalLabel\">{{ isEditMode ? 'Edit Booking' : 'Add Booking' }}</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"mb-3\">\n            <label for=\"user_id\" class=\"form-label\">User ID</label>\n            <input type=\"number\" formControlName=\"user_id\" class=\"form-control\" id=\"user_id\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"room_id\" class=\"form-label\">Room ID</label>\n            <input type=\"number\" formControlName=\"room_id\" class=\"form-control\" id=\"room_id\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"start_date\" class=\"form-label\">Start Date</label>\n            <input type=\"date\" formControlName=\"start_date\" class=\"form-control\" id=\"start_date\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"end_date\" class=\"form-label\">End Date</label>\n            <input type=\"date\" formControlName=\"end_date\" class=\"form-control\" id=\"end_date\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select formControlName=\"status\" class=\"form-control\" id=\"status\">\n              <option value=\"booked\">Booked</option>\n              <option value=\"canceled\">Canceled</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">{{ isEditMode ? 'Update' : 'Add' }} Booking</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}